{
  "version": 3,
  "sources": ["../../@tsparticles/engine/browser/Core/Utils/Constants.js", "../../@tsparticles/engine/browser/Enums/Directions/MoveDirection.js", "../../@tsparticles/engine/browser/Utils/TypeUtils.js", "../../@tsparticles/engine/browser/Core/Utils/Vectors.js", "../../@tsparticles/engine/browser/Utils/NumberUtils.js", "../../@tsparticles/engine/browser/Enums/Modes/AnimationMode.js", "../../@tsparticles/engine/browser/Enums/AnimationStatus.js", "../../@tsparticles/engine/browser/Enums/Types/DestroyType.js", "../../@tsparticles/engine/browser/Enums/Directions/OutModeDirection.js", "../../@tsparticles/engine/browser/Enums/Modes/PixelMode.js", "../../@tsparticles/engine/browser/Enums/Types/StartValueType.js", "../../@tsparticles/engine/browser/Utils/Utils.js", "../../@tsparticles/engine/browser/Enums/Types/AlterType.js", "../../@tsparticles/engine/browser/Utils/ColorUtils.js", "../../@tsparticles/engine/browser/Utils/CanvasUtils.js", "../../@tsparticles/engine/browser/Core/Canvas.js", "../../@tsparticles/engine/browser/Enums/InteractivityDetect.js", "../../@tsparticles/engine/browser/Core/Utils/EventListeners.js", "../../@tsparticles/engine/browser/Enums/Types/EventType.js", "../../@tsparticles/engine/browser/Options/Classes/OptionsColor.js", "../../@tsparticles/engine/browser/Options/Classes/Background/Background.js", "../../@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMaskCover.js", "../../@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMask.js", "../../@tsparticles/engine/browser/Options/Classes/FullScreen/FullScreen.js", "../../@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ClickEvent.js", "../../@tsparticles/engine/browser/Enums/Types/DivType.js", "../../@tsparticles/engine/browser/Options/Classes/Interactivity/Events/DivEvent.js", "../../@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Parallax.js", "../../@tsparticles/engine/browser/Options/Classes/Interactivity/Events/HoverEvent.js", "../../@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ResizeEvent.js", "../../@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Events.js", "../../@tsparticles/engine/browser/Options/Classes/Interactivity/Modes/Modes.js", "../../@tsparticles/engine/browser/Options/Classes/Interactivity/Interactivity.js", "../../@tsparticles/engine/browser/Options/Classes/ManualParticle.js", "../../@tsparticles/engine/browser/Enums/Modes/ResponsiveMode.js", "../../@tsparticles/engine/browser/Options/Classes/Responsive.js", "../../@tsparticles/engine/browser/Enums/Modes/ThemeMode.js", "../../@tsparticles/engine/browser/Options/Classes/Theme/ThemeDefault.js", "../../@tsparticles/engine/browser/Options/Classes/Theme/Theme.js", "../../@tsparticles/engine/browser/Options/Classes/AnimationOptions.js", "../../@tsparticles/engine/browser/Options/Classes/ColorAnimation.js", "../../@tsparticles/engine/browser/Options/Classes/HslAnimation.js", "../../@tsparticles/engine/browser/Options/Classes/AnimatableColor.js", "../../@tsparticles/engine/browser/Enums/Modes/CollisionMode.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsAbsorb.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsOverlap.js", "../../@tsparticles/engine/browser/Options/Classes/ValueWithRandom.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounce.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Collisions/Collisions.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Effect/Effect.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAngle.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAttract.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveCenter.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveGravity.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Move/Path/MovePath.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrailFill.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrail.js", "../../@tsparticles/engine/browser/Enums/Modes/OutMode.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Move/OutModes.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Move/Spin.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Move/Move.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Opacity/OpacityAnimation.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Opacity/Opacity.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesDensity.js", "../../@tsparticles/engine/browser/Enums/Modes/LimitMode.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumberLimit.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumber.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Shadow.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Shape/Shape.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Size/SizeAnimation.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Size/Size.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/Stroke.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/ZIndex/ZIndex.js", "../../@tsparticles/engine/browser/Options/Classes/Particles/ParticlesOptions.js", "../../@tsparticles/engine/browser/Utils/OptionsUtils.js", "../../@tsparticles/engine/browser/Options/Classes/Options.js", "../../@tsparticles/engine/browser/Enums/Types/InteractorType.js", "../../@tsparticles/engine/browser/Core/Utils/InteractionManager.js", "../../@tsparticles/engine/browser/Enums/Types/ParticleOutType.js", "../../@tsparticles/engine/browser/Core/Particle.js", "../../@tsparticles/engine/browser/Core/Utils/Point.js", "../../@tsparticles/engine/browser/Types/RangeType.js", "../../@tsparticles/engine/browser/Core/Utils/Ranges.js", "../../@tsparticles/engine/browser/Core/Utils/QuadTree.js", "../../@tsparticles/engine/browser/Core/Particles.js", "../../@tsparticles/engine/browser/Core/Retina.js", "../../@tsparticles/engine/browser/Core/Container.js", "../../@tsparticles/engine/browser/Utils/EventDispatcher.js", "../../@tsparticles/engine/browser/Core/Engine.js", "../../@tsparticles/engine/browser/init.js", "../../@tsparticles/engine/browser/Core/Utils/ExternalInteractorBase.js", "../../@tsparticles/engine/browser/Core/Utils/ParticlesInteractorBase.js", "../../@tsparticles/engine/browser/Enums/Directions/RotateDirection.js", "../../@tsparticles/engine/browser/Enums/Types/GradientType.js", "../../@tsparticles/engine/browser/Enums/Types/EasingType.js", "../../@tsparticles/engine/browser/index.js"],
  "sourcesContent": ["export const generatedAttribute = \"generated\", mouseDownEvent = \"pointerdown\", mouseUpEvent = \"pointerup\", mouseLeaveEvent = \"pointerleave\", mouseOutEvent = \"pointerout\", mouseMoveEvent = \"pointermove\", touchStartEvent = \"touchstart\", touchEndEvent = \"touchend\", touchMoveEvent = \"touchmove\", touchCancelEvent = \"touchcancel\", resizeEvent = \"resize\", visibilityChangeEvent = \"visibilitychange\", errorPrefix = \"tsParticles - Error\", percentDenominator = 100, half = 0.5, millisecondsToSeconds = 1000, originPoint = {\r\n    x: 0,\r\n    y: 0,\r\n    z: 0,\r\n}, defaultTransform = {\r\n    a: 1,\r\n    b: 0,\r\n    c: 0,\r\n    d: 1,\r\n}, randomColorValue = \"random\", midColorValue = \"mid\", double = 2, doublePI = Math.PI * double, defaultFps = 60, defaultAlpha = 1, generatedTrue = \"true\", generatedFalse = \"false\", canvasTag = \"canvas\", defaultRetryCount = 0, squareExp = 2, qTreeCapacity = 4, defaultRemoveQuantity = 1, defaultRatio = 1, defaultReduceFactor = 1, subdivideCount = 4, inverseFactorNumerator = 1.0, rgbMax = 255, hMax = 360, sMax = 100, lMax = 100, hMin = 0, sMin = 0, hPhase = 60, empty = 0, quarter = 0.25, threeQuarter = half + quarter, minVelocity = 0, defaultTransformValue = 1, minimumSize = 0, minimumLength = 0, zIndexFactorOffset = 1, defaultOpacity = 1, clickRadius = 1, touchEndLengthOffset = 1, minCoordinate = 0, removeDeleteCount = 1, removeMinIndex = 0, defaultFpsLimit = 120, minFpsLimit = 0, canvasFirstIndex = 0, loadRandomFactor = 10000, loadMinIndex = 0, one = 1, none = 0, decayOffset = 1, tryCountIncrement = 1, minRetries = 0, rollFactor = 1, minZ = 0, defaultRadius = 0, posOffset = -quarter, sizeFactor = 1.5, minLimit = 0, countOffset = 1, minCount = 0, minIndex = 0, manualCount = 0, lengthOffset = 1, defaultDensityFactor = 1, deleteCount = 1, touchDelay = 500, manualDefaultPosition = 50, defaultAngle = 0, identity = 1, minStrokeWidth = 0, lFactor = 1, lMin = 0, rgbFactor = 255, triple = 3, sextuple = 6, sNormalizedOffset = 1, phaseNumerator = 1, defaultRgbMin = 0, defaultVelocity = 0, defaultLoops = 0, defaultTime = 0;\r\n", "export var MoveDirection;\r\n(function (MoveDirection) {\r\n    MoveDirection[\"bottom\"] = \"bottom\";\r\n    MoveDirection[\"bottomLeft\"] = \"bottom-left\";\r\n    MoveDirection[\"bottomRight\"] = \"bottom-right\";\r\n    MoveDirection[\"left\"] = \"left\";\r\n    MoveDirection[\"none\"] = \"none\";\r\n    MoveDirection[\"right\"] = \"right\";\r\n    MoveDirection[\"top\"] = \"top\";\r\n    MoveDirection[\"topLeft\"] = \"top-left\";\r\n    MoveDirection[\"topRight\"] = \"top-right\";\r\n    MoveDirection[\"outside\"] = \"outside\";\r\n    MoveDirection[\"inside\"] = \"inside\";\r\n})(MoveDirection || (MoveDirection = {}));\r\n", "export function isBoolean(arg) {\r\n    return typeof arg === \"boolean\";\r\n}\r\nexport function isString(arg) {\r\n    return typeof arg === \"string\";\r\n}\r\nexport function isNumber(arg) {\r\n    return typeof arg === \"number\";\r\n}\r\nexport function isFunction(arg) {\r\n    return typeof arg === \"function\";\r\n}\r\nexport function isObject(arg) {\r\n    return typeof arg === \"object\" && arg !== null;\r\n}\r\nexport function isArray(arg) {\r\n    return Array.isArray(arg);\r\n}\r\nexport function isNull(arg) {\r\n    return arg === null || arg === undefined;\r\n}\r\n", "import { errorPrefix, inverseFactorNumerator, none, originPoint, squareExp } from \"./Constants.js\";\r\nimport { isNumber } from \"../../Utils/TypeUtils.js\";\r\nexport class Vector3d {\r\n    constructor(xOrCoords, y, z) {\r\n        this._updateFromAngle = (angle, length) => {\r\n            this.x = Math.cos(angle) * length;\r\n            this.y = Math.sin(angle) * length;\r\n        };\r\n        if (!isNumber(xOrCoords) && xOrCoords) {\r\n            this.x = xOrCoords.x;\r\n            this.y = xOrCoords.y;\r\n            const coords3d = xOrCoords;\r\n            this.z = coords3d.z ? coords3d.z : originPoint.z;\r\n        }\r\n        else if (xOrCoords !== undefined && y !== undefined) {\r\n            this.x = xOrCoords;\r\n            this.y = y;\r\n            this.z = z ?? originPoint.z;\r\n        }\r\n        else {\r\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\r\n        }\r\n    }\r\n    static get origin() {\r\n        return Vector3d.create(originPoint.x, originPoint.y, originPoint.z);\r\n    }\r\n    get angle() {\r\n        return Math.atan2(this.y, this.x);\r\n    }\r\n    set angle(angle) {\r\n        this._updateFromAngle(angle, this.length);\r\n    }\r\n    get length() {\r\n        return Math.sqrt(this.getLengthSq());\r\n    }\r\n    set length(length) {\r\n        this._updateFromAngle(this.angle, length);\r\n    }\r\n    static clone(source) {\r\n        return Vector3d.create(source.x, source.y, source.z);\r\n    }\r\n    static create(x, y, z) {\r\n        return new Vector3d(x, y, z);\r\n    }\r\n    add(v) {\r\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\r\n    }\r\n    addTo(v) {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        this.z += v.z;\r\n    }\r\n    copy() {\r\n        return Vector3d.clone(this);\r\n    }\r\n    distanceTo(v) {\r\n        return this.sub(v).length;\r\n    }\r\n    distanceToSq(v) {\r\n        return this.sub(v).getLengthSq();\r\n    }\r\n    div(n) {\r\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\r\n    }\r\n    divTo(n) {\r\n        this.x /= n;\r\n        this.y /= n;\r\n        this.z /= n;\r\n    }\r\n    getLengthSq() {\r\n        return this.x ** squareExp + this.y ** squareExp;\r\n    }\r\n    mult(n) {\r\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\r\n    }\r\n    multTo(n) {\r\n        this.x *= n;\r\n        this.y *= n;\r\n        this.z *= n;\r\n    }\r\n    normalize() {\r\n        const length = this.length;\r\n        if (length != none) {\r\n            this.multTo(inverseFactorNumerator / length);\r\n        }\r\n    }\r\n    rotate(angle) {\r\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), originPoint.z);\r\n    }\r\n    setTo(c) {\r\n        this.x = c.x;\r\n        this.y = c.y;\r\n        const v3d = c;\r\n        this.z = v3d.z ? v3d.z : originPoint.z;\r\n    }\r\n    sub(v) {\r\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\r\n    }\r\n    subFrom(v) {\r\n        this.x -= v.x;\r\n        this.y -= v.y;\r\n        this.z -= v.z;\r\n    }\r\n}\r\nexport class Vector extends Vector3d {\r\n    constructor(xOrCoords, y) {\r\n        super(xOrCoords, y, originPoint.z);\r\n    }\r\n    static get origin() {\r\n        return Vector.create(originPoint.x, originPoint.y);\r\n    }\r\n    static clone(source) {\r\n        return Vector.create(source.x, source.y);\r\n    }\r\n    static create(x, y) {\r\n        return new Vector(x, y);\r\n    }\r\n}\r\n", "import { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\r\nimport { double, doublePI, empty, half, percentDenominator, quarter, threeQuarter } from \"../Core/Utils/Constants.js\";\r\nimport { Vector } from \"../Core/Utils/Vectors.js\";\r\nimport { isNumber } from \"./TypeUtils.js\";\r\nlet _random = Math.random;\r\nconst _animationLoop = {\r\n    nextFrame: (cb) => requestAnimationFrame(cb),\r\n    cancel: (idx) => cancelAnimationFrame(idx),\r\n};\r\nexport function setRandom(rnd = Math.random) {\r\n    _random = rnd;\r\n}\r\nexport function getRandom() {\r\n    const min = 0, max = 1;\r\n    return clamp(_random(), min, max - Number.EPSILON);\r\n}\r\nexport function setAnimationFunctions(nextFrame, cancel) {\r\n    _animationLoop.nextFrame = (callback) => nextFrame(callback);\r\n    _animationLoop.cancel = (handle) => cancel(handle);\r\n}\r\nexport function animate(fn) {\r\n    return _animationLoop.nextFrame(fn);\r\n}\r\nexport function cancelAnimation(handle) {\r\n    _animationLoop.cancel(handle);\r\n}\r\nexport function clamp(num, min, max) {\r\n    return Math.min(Math.max(num, min), max);\r\n}\r\nexport function mix(comp1, comp2, weight1, weight2) {\r\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\r\n}\r\nexport function randomInRange(r) {\r\n    const max = getRangeMax(r), minOffset = 0;\r\n    let min = getRangeMin(r);\r\n    if (max === min) {\r\n        min = minOffset;\r\n    }\r\n    return getRandom() * (max - min) + min;\r\n}\r\nexport function getRangeValue(value) {\r\n    return isNumber(value) ? value : randomInRange(value);\r\n}\r\nexport function getRangeMin(value) {\r\n    return isNumber(value) ? value : value.min;\r\n}\r\nexport function getRangeMax(value) {\r\n    return isNumber(value) ? value : value.max;\r\n}\r\nexport function setRangeValue(source, value) {\r\n    if (source === value || (value === undefined && isNumber(source))) {\r\n        return source;\r\n    }\r\n    const min = getRangeMin(source), max = getRangeMax(source);\r\n    return value !== undefined\r\n        ? {\r\n            min: Math.min(min, value),\r\n            max: Math.max(max, value),\r\n        }\r\n        : setRangeValue(min, max);\r\n}\r\nexport function getDistances(pointA, pointB) {\r\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y, squareExp = 2;\r\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** squareExp + dy ** squareExp) };\r\n}\r\nexport function getDistance(pointA, pointB) {\r\n    return getDistances(pointA, pointB).distance;\r\n}\r\nexport function degToRad(degrees) {\r\n    const PIDeg = 180;\r\n    return (degrees * Math.PI) / PIDeg;\r\n}\r\nexport function getParticleDirectionAngle(direction, position, center) {\r\n    if (isNumber(direction)) {\r\n        return degToRad(direction);\r\n    }\r\n    switch (direction) {\r\n        case MoveDirection.top:\r\n            return -Math.PI * half;\r\n        case MoveDirection.topRight:\r\n            return -Math.PI * quarter;\r\n        case MoveDirection.right:\r\n            return empty;\r\n        case MoveDirection.bottomRight:\r\n            return Math.PI * quarter;\r\n        case MoveDirection.bottom:\r\n            return Math.PI * half;\r\n        case MoveDirection.bottomLeft:\r\n            return Math.PI * threeQuarter;\r\n        case MoveDirection.left:\r\n            return Math.PI;\r\n        case MoveDirection.topLeft:\r\n            return -Math.PI * threeQuarter;\r\n        case MoveDirection.inside:\r\n            return Math.atan2(center.y - position.y, center.x - position.x);\r\n        case MoveDirection.outside:\r\n            return Math.atan2(position.y - center.y, position.x - center.x);\r\n        default:\r\n            return getRandom() * doublePI;\r\n    }\r\n}\r\nexport function getParticleBaseVelocity(direction) {\r\n    const baseVelocity = Vector.origin;\r\n    baseVelocity.length = 1;\r\n    baseVelocity.angle = direction;\r\n    return baseVelocity;\r\n}\r\nexport function collisionVelocity(v1, v2, m1, m2) {\r\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * double * m2) / (m1 + m2), v1.y);\r\n}\r\nexport function calcPositionFromSize(data) {\r\n    return data.position?.x !== undefined && data.position.y !== undefined\r\n        ? {\r\n            x: (data.position.x * data.size.width) / percentDenominator,\r\n            y: (data.position.y * data.size.height) / percentDenominator,\r\n        }\r\n        : undefined;\r\n}\r\nexport function calcPositionOrRandomFromSize(data) {\r\n    return {\r\n        x: ((data.position?.x ?? getRandom() * percentDenominator) * data.size.width) / percentDenominator,\r\n        y: ((data.position?.y ?? getRandom() * percentDenominator) * data.size.height) / percentDenominator,\r\n    };\r\n}\r\nexport function calcPositionOrRandomFromSizeRanged(data) {\r\n    const position = {\r\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\r\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\r\n    };\r\n    return calcPositionOrRandomFromSize({ size: data.size, position });\r\n}\r\nexport function calcExactPositionOrRandomFromSize(data) {\r\n    return {\r\n        x: data.position?.x ?? getRandom() * data.size.width,\r\n        y: data.position?.y ?? getRandom() * data.size.height,\r\n    };\r\n}\r\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\r\n    const position = {\r\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\r\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\r\n    };\r\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\r\n}\r\nexport function parseAlpha(input) {\r\n    const defaultAlpha = 1;\r\n    if (!input) {\r\n        return defaultAlpha;\r\n    }\r\n    return input.endsWith(\"%\") ? parseFloat(input) / percentDenominator : parseFloat(input);\r\n}\r\n", "export var AnimationMode;\r\n(function (AnimationMode) {\r\n    AnimationMode[\"auto\"] = \"auto\";\r\n    AnimationMode[\"increase\"] = \"increase\";\r\n    AnimationMode[\"decrease\"] = \"decrease\";\r\n    AnimationMode[\"random\"] = \"random\";\r\n})(AnimationMode || (AnimationMode = {}));\r\n", "export var AnimationStatus;\r\n(function (AnimationStatus) {\r\n    AnimationStatus[\"increasing\"] = \"increasing\";\r\n    AnimationStatus[\"decreasing\"] = \"decreasing\";\r\n})(AnimationStatus || (AnimationStatus = {}));\r\n", "export var DestroyType;\r\n(function (DestroyType) {\r\n    DestroyType[\"none\"] = \"none\";\r\n    DestroyType[\"max\"] = \"max\";\r\n    DestroyType[\"min\"] = \"min\";\r\n})(DestroyType || (DestroyType = {}));\r\n", "export var OutModeDirection;\r\n(function (OutModeDirection) {\r\n    OutModeDirection[\"bottom\"] = \"bottom\";\r\n    OutModeDirection[\"left\"] = \"left\";\r\n    OutModeDirection[\"right\"] = \"right\";\r\n    OutModeDirection[\"top\"] = \"top\";\r\n})(OutModeDirection || (OutModeDirection = {}));\r\n", "export var PixelMode;\r\n(function (PixelMode) {\r\n    PixelMode[\"precise\"] = \"precise\";\r\n    PixelMode[\"percent\"] = \"percent\";\r\n})(PixelMode || (PixelMode = {}));\r\n", "export var StartValueType;\r\n(function (StartValueType) {\r\n    StartValueType[\"max\"] = \"max\";\r\n    StartValueType[\"min\"] = \"min\";\r\n    StartValueType[\"random\"] = \"random\";\r\n})(StartValueType || (StartValueType = {}));\r\n", "import { clamp, collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange, } from \"./NumberUtils.js\";\r\nimport { half, millisecondsToSeconds, minVelocity, percentDenominator } from \"../Core/Utils/Constants.js\";\r\nimport { isArray, isNull, isObject } from \"./TypeUtils.js\";\r\nimport { AnimationMode } from \"../Enums/Modes/AnimationMode.js\";\r\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\r\nimport { DestroyType } from \"../Enums/Types/DestroyType.js\";\r\nimport { OutModeDirection } from \"../Enums/Directions/OutModeDirection.js\";\r\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\r\nimport { StartValueType } from \"../Enums/Types/StartValueType.js\";\r\nimport { Vector } from \"../Core/Utils/Vectors.js\";\r\nconst _logger = {\r\n    debug: console.debug,\r\n    error: console.error,\r\n    info: console.info,\r\n    log: console.log,\r\n    verbose: console.log,\r\n    warning: console.warn,\r\n};\r\nexport function setLogger(logger) {\r\n    _logger.debug = logger.debug || _logger.debug;\r\n    _logger.error = logger.error || _logger.error;\r\n    _logger.info = logger.info || _logger.info;\r\n    _logger.log = logger.log || _logger.log;\r\n    _logger.verbose = logger.verbose || _logger.verbose;\r\n    _logger.warning = logger.warning || _logger.warning;\r\n}\r\nexport function getLogger() {\r\n    return _logger;\r\n}\r\nfunction memoize(fn) {\r\n    const cache = new Map();\r\n    return (...args) => {\r\n        const key = JSON.stringify(args);\r\n        if (cache.has(key)) {\r\n            return cache.get(key);\r\n        }\r\n        const result = fn(...args);\r\n        cache.set(key, result);\r\n        return result;\r\n    };\r\n}\r\nfunction rectSideBounce(data) {\r\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\r\n    if (pOtherSide.min < rectOtherSide.min ||\r\n        pOtherSide.min > rectOtherSide.max ||\r\n        pOtherSide.max < rectOtherSide.min ||\r\n        pOtherSide.max > rectOtherSide.max) {\r\n        return res;\r\n    }\r\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) * half && velocity > minVelocity) ||\r\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) * half && velocity < minVelocity)) {\r\n        res.velocity = velocity * -factor;\r\n        res.bounced = true;\r\n    }\r\n    return res;\r\n}\r\nfunction checkSelector(element, selectors) {\r\n    const res = executeOnSingleOrMultiple(selectors, selector => {\r\n        return element.matches(selector);\r\n    });\r\n    return isArray(res) ? res.some(t => t) : res;\r\n}\r\nexport function isSsr() {\r\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\r\n}\r\nexport function hasMatchMedia() {\r\n    return !isSsr() && typeof matchMedia !== \"undefined\";\r\n}\r\nexport function safeMatchMedia(query) {\r\n    if (!hasMatchMedia()) {\r\n        return;\r\n    }\r\n    return matchMedia(query);\r\n}\r\nexport function safeIntersectionObserver(callback) {\r\n    if (isSsr() || typeof IntersectionObserver === \"undefined\") {\r\n        return;\r\n    }\r\n    return new IntersectionObserver(callback);\r\n}\r\nexport function safeMutationObserver(callback) {\r\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\r\n        return;\r\n    }\r\n    return new MutationObserver(callback);\r\n}\r\nexport function isInArray(value, array) {\r\n    const invalidIndex = -1;\r\n    return value === array || (isArray(array) && array.indexOf(value) > invalidIndex);\r\n}\r\nexport async function loadFont(font, weight) {\r\n    try {\r\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\r\n    }\r\n    catch {\r\n    }\r\n}\r\nexport function arrayRandomIndex(array) {\r\n    return Math.floor(getRandom() * array.length);\r\n}\r\nexport function itemFromArray(array, index, useIndex = true) {\r\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\r\n}\r\nexport function isPointInside(point, size, offset, radius, direction) {\r\n    const minRadius = 0;\r\n    return areBoundsInside(calculateBounds(point, radius ?? minRadius), size, offset, direction);\r\n}\r\nexport function areBoundsInside(bounds, size, offset, direction) {\r\n    let inside = true;\r\n    if (!direction || direction === OutModeDirection.bottom) {\r\n        inside = bounds.top < size.height + offset.x;\r\n    }\r\n    if (inside && (!direction || direction === OutModeDirection.left)) {\r\n        inside = bounds.right > offset.x;\r\n    }\r\n    if (inside && (!direction || direction === OutModeDirection.right)) {\r\n        inside = bounds.left < size.width + offset.y;\r\n    }\r\n    if (inside && (!direction || direction === OutModeDirection.top)) {\r\n        inside = bounds.bottom > offset.y;\r\n    }\r\n    return inside;\r\n}\r\nexport function calculateBounds(point, radius) {\r\n    return {\r\n        bottom: point.y + radius,\r\n        left: point.x - radius,\r\n        right: point.x + radius,\r\n        top: point.y - radius,\r\n    };\r\n}\r\nexport function deepExtend(destination, ...sources) {\r\n    for (const source of sources) {\r\n        if (source === undefined || source === null) {\r\n            continue;\r\n        }\r\n        if (!isObject(source)) {\r\n            destination = source;\r\n            continue;\r\n        }\r\n        const sourceIsArray = Array.isArray(source);\r\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\r\n            destination = [];\r\n        }\r\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\r\n            destination = {};\r\n        }\r\n        for (const key in source) {\r\n            if (key === \"__proto__\") {\r\n                continue;\r\n            }\r\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\r\n            destDict[key] =\r\n                isObject(value) && Array.isArray(value)\r\n                    ? value.map(v => deepExtend(destDict[key], v))\r\n                    : deepExtend(destDict[key], value);\r\n        }\r\n    }\r\n    return destination;\r\n}\r\nexport function isDivModeEnabled(mode, divs) {\r\n    return !!findItemFromSingleOrMultiple(divs, t => t.enable && isInArray(mode, t.mode));\r\n}\r\nexport function divModeExecute(mode, divs, callback) {\r\n    executeOnSingleOrMultiple(divs, div => {\r\n        const divMode = div.mode, divEnabled = div.enable;\r\n        if (divEnabled && isInArray(mode, divMode)) {\r\n            singleDivModeExecute(div, callback);\r\n        }\r\n    });\r\n}\r\nexport function singleDivModeExecute(div, callback) {\r\n    const selectors = div.selectors;\r\n    executeOnSingleOrMultiple(selectors, selector => {\r\n        callback(selector, div);\r\n    });\r\n}\r\nexport function divMode(divs, element) {\r\n    if (!element || !divs) {\r\n        return;\r\n    }\r\n    return findItemFromSingleOrMultiple(divs, div => {\r\n        return checkSelector(element, div.selectors);\r\n    });\r\n}\r\nexport function circleBounceDataFromParticle(p) {\r\n    return {\r\n        position: p.getPosition(),\r\n        radius: p.getRadius(),\r\n        mass: p.getMass(),\r\n        velocity: p.velocity,\r\n        factor: Vector.create(getRangeValue(p.options.bounce.horizontal.value), getRangeValue(p.options.bounce.vertical.value)),\r\n    };\r\n}\r\nexport function circleBounce(p1, p2) {\r\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1), minimumDistance = 0;\r\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < minimumDistance) {\r\n        return;\r\n    }\r\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\r\n    p1.velocity.x = vFinal1.x * p1.factor.x;\r\n    p1.velocity.y = vFinal1.y * p1.factor.y;\r\n    p2.velocity.x = vFinal2.x * p2.factor.x;\r\n    p2.velocity.y = vFinal2.y * p2.factor.y;\r\n}\r\nexport function rectBounce(particle, divBounds) {\r\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), bounceOptions = particle.options.bounce, resH = rectSideBounce({\r\n        pSide: {\r\n            min: bounds.left,\r\n            max: bounds.right,\r\n        },\r\n        pOtherSide: {\r\n            min: bounds.top,\r\n            max: bounds.bottom,\r\n        },\r\n        rectSide: {\r\n            min: divBounds.left,\r\n            max: divBounds.right,\r\n        },\r\n        rectOtherSide: {\r\n            min: divBounds.top,\r\n            max: divBounds.bottom,\r\n        },\r\n        velocity: particle.velocity.x,\r\n        factor: getRangeValue(bounceOptions.horizontal.value),\r\n    });\r\n    if (resH.bounced) {\r\n        if (resH.velocity !== undefined) {\r\n            particle.velocity.x = resH.velocity;\r\n        }\r\n        if (resH.position !== undefined) {\r\n            particle.position.x = resH.position;\r\n        }\r\n    }\r\n    const resV = rectSideBounce({\r\n        pSide: {\r\n            min: bounds.top,\r\n            max: bounds.bottom,\r\n        },\r\n        pOtherSide: {\r\n            min: bounds.left,\r\n            max: bounds.right,\r\n        },\r\n        rectSide: {\r\n            min: divBounds.top,\r\n            max: divBounds.bottom,\r\n        },\r\n        rectOtherSide: {\r\n            min: divBounds.left,\r\n            max: divBounds.right,\r\n        },\r\n        velocity: particle.velocity.y,\r\n        factor: getRangeValue(bounceOptions.vertical.value),\r\n    });\r\n    if (resV.bounced) {\r\n        if (resV.velocity !== undefined) {\r\n            particle.velocity.y = resV.velocity;\r\n        }\r\n        if (resV.position !== undefined) {\r\n            particle.position.y = resV.position;\r\n        }\r\n    }\r\n}\r\nexport function executeOnSingleOrMultiple(obj, callback) {\r\n    const defaultIndex = 0;\r\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, defaultIndex);\r\n}\r\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\r\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\r\n}\r\nexport function findItemFromSingleOrMultiple(obj, callback) {\r\n    if (isArray(obj)) {\r\n        return obj.find((t, index) => callback(t, index));\r\n    }\r\n    const defaultIndex = 0;\r\n    return callback(obj, defaultIndex) ? obj : undefined;\r\n}\r\nexport function initParticleNumericAnimationValue(options, pxRatio) {\r\n    const valueRange = options.value, animationOptions = options.animation, res = {\r\n        delayTime: getRangeValue(animationOptions.delay) * millisecondsToSeconds,\r\n        enable: animationOptions.enable,\r\n        value: getRangeValue(options.value) * pxRatio,\r\n        max: getRangeMax(valueRange) * pxRatio,\r\n        min: getRangeMin(valueRange) * pxRatio,\r\n        loops: 0,\r\n        maxLoops: getRangeValue(animationOptions.count),\r\n        time: 0,\r\n    }, decayOffset = 1;\r\n    if (animationOptions.enable) {\r\n        res.decay = decayOffset - getRangeValue(animationOptions.decay);\r\n        switch (animationOptions.mode) {\r\n            case AnimationMode.increase:\r\n                res.status = AnimationStatus.increasing;\r\n                break;\r\n            case AnimationMode.decrease:\r\n                res.status = AnimationStatus.decreasing;\r\n                break;\r\n            case AnimationMode.random:\r\n                res.status = getRandom() >= half ? AnimationStatus.increasing : AnimationStatus.decreasing;\r\n                break;\r\n        }\r\n        const autoStatus = animationOptions.mode === AnimationMode.auto;\r\n        switch (animationOptions.startValue) {\r\n            case StartValueType.min:\r\n                res.value = res.min;\r\n                if (autoStatus) {\r\n                    res.status = AnimationStatus.increasing;\r\n                }\r\n                break;\r\n            case StartValueType.max:\r\n                res.value = res.max;\r\n                if (autoStatus) {\r\n                    res.status = AnimationStatus.decreasing;\r\n                }\r\n                break;\r\n            case StartValueType.random:\r\n            default:\r\n                res.value = randomInRange(res);\r\n                if (autoStatus) {\r\n                    res.status = getRandom() >= half ? AnimationStatus.increasing : AnimationStatus.decreasing;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    res.initialValue = res.value;\r\n    return res;\r\n}\r\nfunction getPositionOrSize(positionOrSize, canvasSize) {\r\n    const isPercent = positionOrSize.mode === PixelMode.percent;\r\n    if (!isPercent) {\r\n        const { mode: _, ...rest } = positionOrSize;\r\n        return rest;\r\n    }\r\n    const isPosition = \"x\" in positionOrSize;\r\n    if (isPosition) {\r\n        return {\r\n            x: (positionOrSize.x / percentDenominator) * canvasSize.width,\r\n            y: (positionOrSize.y / percentDenominator) * canvasSize.height,\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            width: (positionOrSize.width / percentDenominator) * canvasSize.width,\r\n            height: (positionOrSize.height / percentDenominator) * canvasSize.height,\r\n        };\r\n    }\r\n}\r\nexport function getPosition(position, canvasSize) {\r\n    return getPositionOrSize(position, canvasSize);\r\n}\r\nexport function getSize(size, canvasSize) {\r\n    return getPositionOrSize(size, canvasSize);\r\n}\r\nfunction checkDestroy(particle, destroyType, value, minValue, maxValue) {\r\n    switch (destroyType) {\r\n        case DestroyType.max:\r\n            if (value >= maxValue) {\r\n                particle.destroy();\r\n            }\r\n            break;\r\n        case DestroyType.min:\r\n            if (value <= minValue) {\r\n                particle.destroy();\r\n            }\r\n            break;\r\n    }\r\n}\r\nexport function updateAnimation(particle, data, changeDirection, destroyType, delta) {\r\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minDecay = 1;\r\n    if (particle.destroyed ||\r\n        !data ||\r\n        !data.enable ||\r\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\r\n        return;\r\n    }\r\n    const velocity = (data.velocity ?? minVelocity) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? minDecay;\r\n    if (!data.time) {\r\n        data.time = 0;\r\n    }\r\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\r\n        data.time += delta.value;\r\n    }\r\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\r\n        return;\r\n    }\r\n    switch (data.status) {\r\n        case AnimationStatus.increasing:\r\n            if (data.value >= maxValue) {\r\n                if (changeDirection) {\r\n                    data.status = AnimationStatus.decreasing;\r\n                }\r\n                else {\r\n                    data.value -= maxValue;\r\n                }\r\n                if (!data.loops) {\r\n                    data.loops = minLoops;\r\n                }\r\n                data.loops++;\r\n            }\r\n            else {\r\n                data.value += velocity;\r\n            }\r\n            break;\r\n        case AnimationStatus.decreasing:\r\n            if (data.value <= minValue) {\r\n                if (changeDirection) {\r\n                    data.status = AnimationStatus.increasing;\r\n                }\r\n                else {\r\n                    data.value += maxValue;\r\n                }\r\n                if (!data.loops) {\r\n                    data.loops = minLoops;\r\n                }\r\n                data.loops++;\r\n            }\r\n            else {\r\n                data.value -= velocity;\r\n            }\r\n    }\r\n    if (data.velocity && decay !== identity) {\r\n        data.velocity *= decay;\r\n    }\r\n    checkDestroy(particle, destroyType, data.value, minValue, maxValue);\r\n    if (!particle.destroyed) {\r\n        data.value = clamp(data.value, minValue, maxValue);\r\n    }\r\n}\r\nexport function cloneStyle(style) {\r\n    const clonedStyle = document.createElement(\"div\").style;\r\n    if (!style) {\r\n        return clonedStyle;\r\n    }\r\n    for (const key in style) {\r\n        const styleKey = style[key];\r\n        if (!Object.prototype.hasOwnProperty.call(style, key) || isNull(styleKey)) {\r\n            continue;\r\n        }\r\n        const styleValue = style.getPropertyValue?.(styleKey);\r\n        if (!styleValue) {\r\n            continue;\r\n        }\r\n        const stylePriority = style.getPropertyPriority?.(styleKey);\r\n        if (!stylePriority) {\r\n            clonedStyle.setProperty?.(styleKey, styleValue);\r\n        }\r\n        else {\r\n            clonedStyle.setProperty?.(styleKey, styleValue, stylePriority);\r\n        }\r\n    }\r\n    return clonedStyle;\r\n}\r\nfunction computeFullScreenStyle(zIndex) {\r\n    const fullScreenStyle = document.createElement(\"div\").style, radix = 10, style = {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        margin: \"0\",\r\n        padding: \"0\",\r\n        borderWidth: \"0\",\r\n        position: \"fixed\",\r\n        zIndex: zIndex.toString(radix),\r\n        \"z-index\": zIndex.toString(radix),\r\n        top: \"0\",\r\n        left: \"0\",\r\n    };\r\n    for (const key in style) {\r\n        const value = style[key];\r\n        fullScreenStyle.setProperty(key, value);\r\n    }\r\n    return fullScreenStyle;\r\n}\r\nexport const getFullScreenStyle = memoize(computeFullScreenStyle);\r\n", "export var AlterType;\r\n(function (AlterType) {\r\n    AlterType[\"darken\"] = \"darken\";\r\n    AlterType[\"enlighten\"] = \"enlighten\";\r\n})(AlterType || (AlterType = {}));\r\n", "import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, mix, randomInRange, setRangeValue, } from \"./NumberUtils.js\";\r\nimport { decayOffset, defaultLoops, defaultOpacity, defaultRgbMin, defaultTime, defaultVelocity, double, hMax, hMin, hPhase, half, identity, lMax, lMin, midColorValue, millisecondsToSeconds, percentDenominator, phaseNumerator, randomColorValue, rgbFactor, rgbMax, sMax, sMin, sNormalizedOffset, sextuple, triple, } from \"../Core/Utils/Constants.js\";\r\nimport { isArray, isString } from \"./TypeUtils.js\";\r\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\r\nimport { itemFromArray } from \"./Utils.js\";\r\nfunction stringToRgba(engine, input) {\r\n    if (!input) {\r\n        return;\r\n    }\r\n    for (const manager of engine.colorManagers.values()) {\r\n        if (input.startsWith(manager.stringPrefix)) {\r\n            return manager.parseString(input);\r\n        }\r\n    }\r\n}\r\nexport function rangeColorToRgb(engine, input, index, useIndex = true) {\r\n    if (!input) {\r\n        return;\r\n    }\r\n    const color = isString(input) ? { value: input } : input;\r\n    if (isString(color.value)) {\r\n        return colorToRgb(engine, color.value, index, useIndex);\r\n    }\r\n    if (isArray(color.value)) {\r\n        return rangeColorToRgb(engine, {\r\n            value: itemFromArray(color.value, index, useIndex),\r\n        });\r\n    }\r\n    for (const manager of engine.colorManagers.values()) {\r\n        const res = manager.handleRangeColor(color);\r\n        if (res) {\r\n            return res;\r\n        }\r\n    }\r\n}\r\nexport function colorToRgb(engine, input, index, useIndex = true) {\r\n    if (!input) {\r\n        return;\r\n    }\r\n    const color = isString(input) ? { value: input } : input;\r\n    if (isString(color.value)) {\r\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(engine, color.value);\r\n    }\r\n    if (isArray(color.value)) {\r\n        return colorToRgb(engine, {\r\n            value: itemFromArray(color.value, index, useIndex),\r\n        });\r\n    }\r\n    for (const manager of engine.colorManagers.values()) {\r\n        const res = manager.handleColor(color);\r\n        if (res) {\r\n            return res;\r\n        }\r\n    }\r\n}\r\nexport function colorToHsl(engine, color, index, useIndex = true) {\r\n    const rgb = colorToRgb(engine, color, index, useIndex);\r\n    return rgb ? rgbToHsl(rgb) : undefined;\r\n}\r\nexport function rangeColorToHsl(engine, color, index, useIndex = true) {\r\n    const rgb = rangeColorToRgb(engine, color, index, useIndex);\r\n    return rgb ? rgbToHsl(rgb) : undefined;\r\n}\r\nexport function rgbToHsl(color) {\r\n    const r1 = color.r / rgbMax, g1 = color.g / rgbMax, b1 = color.b / rgbMax, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\r\n        h: hMin,\r\n        l: (max + min) * half,\r\n        s: sMin,\r\n    };\r\n    if (max !== min) {\r\n        res.s = res.l < half ? (max - min) / (max + min) : (max - min) / (double - max - min);\r\n        res.h =\r\n            r1 === max\r\n                ? (g1 - b1) / (max - min)\r\n                : (res.h = g1 === max ? double + (b1 - r1) / (max - min) : double * double + (r1 - g1) / (max - min));\r\n    }\r\n    res.l *= lMax;\r\n    res.s *= sMax;\r\n    res.h *= hPhase;\r\n    if (res.h < hMin) {\r\n        res.h += hMax;\r\n    }\r\n    if (res.h >= hMax) {\r\n        res.h -= hMax;\r\n    }\r\n    return res;\r\n}\r\nexport function stringToAlpha(engine, input) {\r\n    return stringToRgba(engine, input)?.a;\r\n}\r\nexport function stringToRgb(engine, input) {\r\n    return stringToRgba(engine, input);\r\n}\r\nexport function hslToRgb(hsl) {\r\n    const h = ((hsl.h % hMax) + hMax) % hMax, s = Math.max(sMin, Math.min(sMax, hsl.s)), l = Math.max(lMin, Math.min(lMax, hsl.l)), hNormalized = h / hMax, sNormalized = s / sMax, lNormalized = l / lMax;\r\n    if (s === sMin) {\r\n        const grayscaleValue = Math.round(lNormalized * rgbFactor);\r\n        return { r: grayscaleValue, g: grayscaleValue, b: grayscaleValue };\r\n    }\r\n    const channel = (temp1, temp2, temp3) => {\r\n        const temp3Min = 0, temp3Max = 1;\r\n        if (temp3 < temp3Min) {\r\n            temp3++;\r\n        }\r\n        if (temp3 > temp3Max) {\r\n            temp3--;\r\n        }\r\n        if (temp3 * sextuple < temp3Max) {\r\n            return temp1 + (temp2 - temp1) * sextuple * temp3;\r\n        }\r\n        if (temp3 * double < temp3Max) {\r\n            return temp2;\r\n        }\r\n        if (temp3 * triple < temp3Max * double) {\r\n            const temp3Offset = double / triple;\r\n            return temp1 + (temp2 - temp1) * (temp3Offset - temp3) * sextuple;\r\n        }\r\n        return temp1;\r\n    }, temp1 = lNormalized < half\r\n        ? lNormalized * (sNormalizedOffset + sNormalized)\r\n        : lNormalized + sNormalized - lNormalized * sNormalized, temp2 = double * lNormalized - temp1, phaseThird = phaseNumerator / triple, red = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized + phaseThird)), green = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized)), blue = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized - phaseThird));\r\n    return { r: Math.round(red), g: Math.round(green), b: Math.round(blue) };\r\n}\r\nexport function hslaToRgba(hsla) {\r\n    const rgbResult = hslToRgb(hsla);\r\n    return {\r\n        a: hsla.a,\r\n        b: rgbResult.b,\r\n        g: rgbResult.g,\r\n        r: rgbResult.r,\r\n    };\r\n}\r\nexport function getRandomRgbColor(min) {\r\n    const fixedMin = min ?? defaultRgbMin, fixedMax = rgbMax + identity;\r\n    return {\r\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\r\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\r\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\r\n    };\r\n}\r\nexport function getStyleFromRgb(color, opacity) {\r\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? defaultOpacity})`;\r\n}\r\nexport function getStyleFromHsl(color, opacity) {\r\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? defaultOpacity})`;\r\n}\r\nexport function colorMix(color1, color2, size1, size2) {\r\n    let rgb1 = color1, rgb2 = color2;\r\n    if (rgb1.r === undefined) {\r\n        rgb1 = hslToRgb(color1);\r\n    }\r\n    if (rgb2.r === undefined) {\r\n        rgb2 = hslToRgb(color2);\r\n    }\r\n    return {\r\n        b: mix(rgb1.b, rgb2.b, size1, size2),\r\n        g: mix(rgb1.g, rgb2.g, size1, size2),\r\n        r: mix(rgb1.r, rgb2.r, size1, size2),\r\n    };\r\n}\r\nexport function getLinkColor(p1, p2, linkColor) {\r\n    if (linkColor === randomColorValue) {\r\n        return getRandomRgbColor();\r\n    }\r\n    else if (linkColor === midColorValue) {\r\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\r\n        if (sourceColor && destColor && p2) {\r\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\r\n        }\r\n        else {\r\n            const hslColor = sourceColor ?? destColor;\r\n            if (hslColor) {\r\n                return hslToRgb(hslColor);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        return linkColor;\r\n    }\r\n}\r\nexport function getLinkRandomColor(engine, optColor, blink, consent) {\r\n    const color = isString(optColor) ? optColor : optColor.value;\r\n    if (color === randomColorValue) {\r\n        if (consent) {\r\n            return rangeColorToRgb(engine, {\r\n                value: color,\r\n            });\r\n        }\r\n        if (blink) {\r\n            return randomColorValue;\r\n        }\r\n        return midColorValue;\r\n    }\r\n    else if (color === midColorValue) {\r\n        return midColorValue;\r\n    }\r\n    else {\r\n        return rangeColorToRgb(engine, {\r\n            value: color,\r\n        });\r\n    }\r\n}\r\nexport function getHslFromAnimation(animation) {\r\n    return animation !== undefined\r\n        ? {\r\n            h: animation.h.value,\r\n            s: animation.s.value,\r\n            l: animation.l.value,\r\n        }\r\n        : undefined;\r\n}\r\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\r\n    const resColor = {\r\n        h: {\r\n            enable: false,\r\n            value: hsl.h,\r\n        },\r\n        s: {\r\n            enable: false,\r\n            value: hsl.s,\r\n        },\r\n        l: {\r\n            enable: false,\r\n            value: hsl.l,\r\n        },\r\n    };\r\n    if (animationOptions) {\r\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\r\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\r\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\r\n    }\r\n    return resColor;\r\n}\r\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\r\n    colorValue.enable = colorAnimation.enable;\r\n    if (colorValue.enable) {\r\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / percentDenominator) * reduceFactor;\r\n        colorValue.decay = decayOffset - getRangeValue(colorAnimation.decay);\r\n        colorValue.status = AnimationStatus.increasing;\r\n        colorValue.loops = defaultLoops;\r\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\r\n        colorValue.time = defaultTime;\r\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * millisecondsToSeconds;\r\n        if (!colorAnimation.sync) {\r\n            colorValue.velocity *= getRandom();\r\n            colorValue.value *= getRandom();\r\n        }\r\n        colorValue.initialValue = colorValue.value;\r\n        colorValue.offset = setRangeValue(colorAnimation.offset);\r\n    }\r\n    else {\r\n        colorValue.velocity = defaultVelocity;\r\n    }\r\n}\r\nexport function updateColorValue(data, range, decrease, delta) {\r\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minOffset = 0, velocityFactor = 3.6;\r\n    if (!data ||\r\n        !data.enable ||\r\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\r\n        return;\r\n    }\r\n    if (!data.time) {\r\n        data.time = 0;\r\n    }\r\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\r\n        data.time += delta.value;\r\n    }\r\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\r\n        return;\r\n    }\r\n    const offset = data.offset ? randomInRange(data.offset) : minOffset, velocity = (data.velocity ?? minVelocity) * delta.factor + offset * velocityFactor, decay = data.decay ?? identity, max = getRangeMax(range), min = getRangeMin(range);\r\n    if (!decrease || data.status === AnimationStatus.increasing) {\r\n        data.value += velocity;\r\n        if (data.value > max) {\r\n            if (!data.loops) {\r\n                data.loops = 0;\r\n            }\r\n            data.loops++;\r\n            if (decrease) {\r\n                data.status = AnimationStatus.decreasing;\r\n            }\r\n            else {\r\n                data.value -= max;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        data.value -= velocity;\r\n        const minValue = 0;\r\n        if (data.value < minValue) {\r\n            if (!data.loops) {\r\n                data.loops = 0;\r\n            }\r\n            data.loops++;\r\n            data.status = AnimationStatus.increasing;\r\n        }\r\n    }\r\n    if (data.velocity && decay !== identity) {\r\n        data.velocity *= decay;\r\n    }\r\n    data.value = clamp(data.value, min, max);\r\n}\r\nexport function updateColor(color, delta) {\r\n    if (!color) {\r\n        return;\r\n    }\r\n    const { h, s, l } = color, ranges = {\r\n        h: { min: 0, max: 360 },\r\n        s: { min: 0, max: 100 },\r\n        l: { min: 0, max: 100 },\r\n    };\r\n    if (h) {\r\n        updateColorValue(h, ranges.h, false, delta);\r\n    }\r\n    if (s) {\r\n        updateColorValue(s, ranges.s, true, delta);\r\n    }\r\n    if (l) {\r\n        updateColorValue(l, ranges.l, true, delta);\r\n    }\r\n}\r\n", "import { defaultAngle, defaultTransform, identity, lFactor, minStrokeWidth, originPoint, } from \"../Core/Utils/Constants.js\";\r\nimport { AlterType } from \"../Enums/Types/AlterType.js\";\r\nimport { getStyleFromRgb } from \"./ColorUtils.js\";\r\nexport function drawLine(context, begin, end) {\r\n    context.beginPath();\r\n    context.moveTo(begin.x, begin.y);\r\n    context.lineTo(end.x, end.y);\r\n    context.closePath();\r\n}\r\nexport function paintBase(context, dimension, baseColor) {\r\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\r\n    context.fillRect(originPoint.x, originPoint.y, dimension.width, dimension.height);\r\n}\r\nexport function paintImage(context, dimension, image, opacity) {\r\n    if (!image) {\r\n        return;\r\n    }\r\n    context.globalAlpha = opacity;\r\n    context.drawImage(image, originPoint.x, originPoint.y, dimension.width, dimension.height);\r\n    context.globalAlpha = 1;\r\n}\r\nexport function clear(context, dimension) {\r\n    context.clearRect(originPoint.x, originPoint.y, dimension.width, dimension.height);\r\n}\r\nexport function drawParticle(data) {\r\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data, pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : defaultAngle), rotateData = {\r\n        sin: Math.sin(angle),\r\n        cos: Math.cos(angle),\r\n    }, rotating = !!angle, transformData = {\r\n        a: rotateData.cos * (transform.a ?? defaultTransform.a),\r\n        b: rotating ? rotateData.sin * (transform.b ?? identity) : (transform.b ?? defaultTransform.b),\r\n        c: rotating ? -rotateData.sin * (transform.c ?? identity) : (transform.c ?? defaultTransform.c),\r\n        d: rotateData.cos * (transform.d ?? defaultTransform.d),\r\n    };\r\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\r\n    if (backgroundMask) {\r\n        context.globalCompositeOperation = composite;\r\n    }\r\n    const shadowColor = particle.shadowColor;\r\n    if (shadow.enable && shadowColor) {\r\n        context.shadowBlur = shadow.blur;\r\n        context.shadowColor = getStyleFromRgb(shadowColor);\r\n        context.shadowOffsetX = shadow.offset.x;\r\n        context.shadowOffsetY = shadow.offset.y;\r\n    }\r\n    if (colorStyles.fill) {\r\n        context.fillStyle = colorStyles.fill;\r\n    }\r\n    const strokeWidth = particle.strokeWidth ?? minStrokeWidth;\r\n    context.lineWidth = strokeWidth;\r\n    if (colorStyles.stroke) {\r\n        context.strokeStyle = colorStyles.stroke;\r\n    }\r\n    const drawData = {\r\n        container,\r\n        context,\r\n        particle,\r\n        radius,\r\n        opacity,\r\n        delta,\r\n        transformData,\r\n        strokeWidth,\r\n    };\r\n    drawShape(drawData);\r\n    drawShapeAfterDraw(drawData);\r\n    drawEffect(drawData);\r\n    context.globalCompositeOperation = \"source-over\";\r\n    context.resetTransform();\r\n}\r\nexport function drawEffect(data) {\r\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\r\n    if (!particle.effect) {\r\n        return;\r\n    }\r\n    const drawer = container.effectDrawers.get(particle.effect);\r\n    if (!drawer) {\r\n        return;\r\n    }\r\n    drawer.draw({\r\n        context,\r\n        particle,\r\n        radius,\r\n        opacity,\r\n        delta,\r\n        pixelRatio: container.retina.pixelRatio,\r\n        transformData: { ...transformData },\r\n    });\r\n}\r\nexport function drawShape(data) {\r\n    const { container, context, particle, radius, opacity, delta, strokeWidth, transformData } = data;\r\n    if (!particle.shape) {\r\n        return;\r\n    }\r\n    const drawer = container.shapeDrawers.get(particle.shape);\r\n    if (!drawer) {\r\n        return;\r\n    }\r\n    context.beginPath();\r\n    drawer.draw({\r\n        context,\r\n        particle,\r\n        radius,\r\n        opacity,\r\n        delta,\r\n        pixelRatio: container.retina.pixelRatio,\r\n        transformData: { ...transformData },\r\n    });\r\n    if (particle.shapeClose) {\r\n        context.closePath();\r\n    }\r\n    if (strokeWidth > minStrokeWidth) {\r\n        context.stroke();\r\n    }\r\n    if (particle.shapeFill) {\r\n        context.fill();\r\n    }\r\n}\r\nexport function drawShapeAfterDraw(data) {\r\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\r\n    if (!particle.shape) {\r\n        return;\r\n    }\r\n    const drawer = container.shapeDrawers.get(particle.shape);\r\n    if (!drawer?.afterDraw) {\r\n        return;\r\n    }\r\n    drawer.afterDraw({\r\n        context,\r\n        particle,\r\n        radius,\r\n        opacity,\r\n        delta,\r\n        pixelRatio: container.retina.pixelRatio,\r\n        transformData: { ...transformData },\r\n    });\r\n}\r\nexport function drawPlugin(context, plugin, delta) {\r\n    if (!plugin.draw) {\r\n        return;\r\n    }\r\n    plugin.draw(context, delta);\r\n}\r\nexport function drawParticlePlugin(context, plugin, particle, delta) {\r\n    if (!plugin.drawParticle) {\r\n        return;\r\n    }\r\n    plugin.drawParticle(context, particle, delta);\r\n}\r\nexport function alterHsl(color, type, value) {\r\n    return {\r\n        h: color.h,\r\n        s: color.s,\r\n        l: color.l + (type === AlterType.darken ? -lFactor : lFactor) * value,\r\n    };\r\n}\r\n", "import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils.js\";\r\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \"../Utils/Utils.js\";\r\nimport { defaultOpacity, defaultTransformValue, generatedAttribute, inverseFactorNumerator, minimumLength, minimumSize, zIndexFactorOffset, } from \"./Utils/Constants.js\";\r\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\r\nfunction setTransformValue(factor, newFactor, key) {\r\n    const newValue = newFactor[key];\r\n    if (newValue !== undefined) {\r\n        factor[key] = (factor[key] ?? defaultTransformValue) * newValue;\r\n    }\r\n}\r\nfunction setStyle(canvas, style, important = false) {\r\n    if (!style) {\r\n        return;\r\n    }\r\n    const element = canvas;\r\n    if (!element) {\r\n        return;\r\n    }\r\n    const elementStyle = element.style;\r\n    if (!elementStyle) {\r\n        return;\r\n    }\r\n    const keys = new Set();\r\n    for (const key in elementStyle) {\r\n        if (!Object.prototype.hasOwnProperty.call(elementStyle, key)) {\r\n            continue;\r\n        }\r\n        keys.add(elementStyle[key]);\r\n    }\r\n    for (const key in style) {\r\n        if (!Object.prototype.hasOwnProperty.call(style, key)) {\r\n            continue;\r\n        }\r\n        keys.add(style[key]);\r\n    }\r\n    for (const key of keys) {\r\n        const value = style.getPropertyValue(key);\r\n        if (!value) {\r\n            elementStyle.removeProperty(key);\r\n        }\r\n        else {\r\n            elementStyle.setProperty(key, value, important ? \"important\" : \"\");\r\n        }\r\n    }\r\n}\r\nexport class Canvas {\r\n    constructor(container, engine) {\r\n        this.container = container;\r\n        this._applyPostDrawUpdaters = particle => {\r\n            for (const updater of this._postDrawUpdaters) {\r\n                updater.afterDraw?.(particle);\r\n            }\r\n        };\r\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\r\n            for (const updater of this._preDrawUpdaters) {\r\n                if (updater.getColorStyles) {\r\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\r\n                    if (fill) {\r\n                        colorStyles.fill = fill;\r\n                    }\r\n                    if (stroke) {\r\n                        colorStyles.stroke = stroke;\r\n                    }\r\n                }\r\n                if (updater.getTransformValues) {\r\n                    const updaterTransform = updater.getTransformValues(particle);\r\n                    for (const key in updaterTransform) {\r\n                        setTransformValue(transform, updaterTransform, key);\r\n                    }\r\n                }\r\n                updater.beforeDraw?.(particle);\r\n            }\r\n        };\r\n        this._applyResizePlugins = () => {\r\n            for (const plugin of this._resizePlugins) {\r\n                plugin.resize?.();\r\n            }\r\n        };\r\n        this._getPluginParticleColors = particle => {\r\n            let fColor, sColor;\r\n            for (const plugin of this._colorPlugins) {\r\n                if (!fColor && plugin.particleFillColor) {\r\n                    fColor = rangeColorToHsl(this._engine, plugin.particleFillColor(particle));\r\n                }\r\n                if (!sColor && plugin.particleStrokeColor) {\r\n                    sColor = rangeColorToHsl(this._engine, plugin.particleStrokeColor(particle));\r\n                }\r\n                if (fColor && sColor) {\r\n                    break;\r\n                }\r\n            }\r\n            return [fColor, sColor];\r\n        };\r\n        this._initCover = async () => {\r\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color;\r\n            if (color) {\r\n                const coverRgb = rangeColorToRgb(this._engine, color);\r\n                if (coverRgb) {\r\n                    const coverColor = {\r\n                        ...coverRgb,\r\n                        a: cover.opacity,\r\n                    };\r\n                    this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\r\n                }\r\n            }\r\n            else {\r\n                await new Promise((resolve, reject) => {\r\n                    if (!cover.image) {\r\n                        return;\r\n                    }\r\n                    const img = document.createElement(\"img\");\r\n                    img.addEventListener(\"load\", () => {\r\n                        this._coverImage = {\r\n                            image: img,\r\n                            opacity: cover.opacity,\r\n                        };\r\n                        resolve();\r\n                    });\r\n                    img.addEventListener(\"error\", evt => {\r\n                        reject(evt.error);\r\n                    });\r\n                    img.src = cover.image;\r\n                });\r\n            }\r\n        };\r\n        this._initStyle = () => {\r\n            const element = this.element, options = this.container.actualOptions;\r\n            if (!element) {\r\n                return;\r\n            }\r\n            if (this._fullScreen) {\r\n                this._setFullScreenStyle();\r\n            }\r\n            else {\r\n                this._resetOriginalStyle();\r\n            }\r\n            for (const key in options.style) {\r\n                if (!key || !options.style || !Object.prototype.hasOwnProperty.call(options.style, key)) {\r\n                    continue;\r\n                }\r\n                const value = options.style[key];\r\n                if (!value) {\r\n                    continue;\r\n                }\r\n                element.style.setProperty(key, value, \"important\");\r\n            }\r\n        };\r\n        this._initTrail = async () => {\r\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\r\n            if (!trail.enable) {\r\n                return;\r\n            }\r\n            const opacity = inverseFactorNumerator / trail.length;\r\n            if (trailFill.color) {\r\n                const fillColor = rangeColorToRgb(this._engine, trailFill.color);\r\n                if (!fillColor) {\r\n                    return;\r\n                }\r\n                this._trailFill = {\r\n                    color: {\r\n                        ...fillColor,\r\n                    },\r\n                    opacity,\r\n                };\r\n            }\r\n            else {\r\n                await new Promise((resolve, reject) => {\r\n                    if (!trailFill.image) {\r\n                        return;\r\n                    }\r\n                    const img = document.createElement(\"img\");\r\n                    img.addEventListener(\"load\", () => {\r\n                        this._trailFill = {\r\n                            image: img,\r\n                            opacity,\r\n                        };\r\n                        resolve();\r\n                    });\r\n                    img.addEventListener(\"error\", evt => {\r\n                        reject(evt.error);\r\n                    });\r\n                    img.src = trailFill.image;\r\n                });\r\n            }\r\n        };\r\n        this._paintBase = baseColor => {\r\n            this.draw(ctx => paintBase(ctx, this.size, baseColor));\r\n        };\r\n        this._paintImage = (image, opacity) => {\r\n            this.draw(ctx => paintImage(ctx, this.size, image, opacity));\r\n        };\r\n        this._repairStyle = () => {\r\n            const element = this.element;\r\n            if (!element) {\r\n                return;\r\n            }\r\n            this._safeMutationObserver(observer => observer.disconnect());\r\n            this._initStyle();\r\n            this.initBackground();\r\n            this._safeMutationObserver(observer => {\r\n                if (!element || !(element instanceof Node)) {\r\n                    return;\r\n                }\r\n                observer.observe(element, { attributes: true });\r\n            });\r\n        };\r\n        this._resetOriginalStyle = () => {\r\n            const element = this.element, originalStyle = this._originalStyle;\r\n            if (!element || !originalStyle) {\r\n                return;\r\n            }\r\n            setStyle(element, originalStyle, true);\r\n        };\r\n        this._safeMutationObserver = callback => {\r\n            if (!this._mutationObserver) {\r\n                return;\r\n            }\r\n            callback(this._mutationObserver);\r\n        };\r\n        this._setFullScreenStyle = () => {\r\n            const element = this.element;\r\n            if (!element) {\r\n                return;\r\n            }\r\n            setStyle(element, getFullScreenStyle(this.container.actualOptions.fullScreen.zIndex), true);\r\n        };\r\n        this._engine = engine;\r\n        this._standardSize = {\r\n            height: 0,\r\n            width: 0,\r\n        };\r\n        const pxRatio = container.retina.pixelRatio, stdSize = this._standardSize;\r\n        this.size = {\r\n            height: stdSize.height * pxRatio,\r\n            width: stdSize.width * pxRatio,\r\n        };\r\n        this._context = null;\r\n        this._generated = false;\r\n        this._preDrawUpdaters = [];\r\n        this._postDrawUpdaters = [];\r\n        this._resizePlugins = [];\r\n        this._colorPlugins = [];\r\n    }\r\n    get _fullScreen() {\r\n        return this.container.actualOptions.fullScreen.enable;\r\n    }\r\n    clear() {\r\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\r\n        if (options.backgroundMask.enable) {\r\n            this.paint();\r\n        }\r\n        else if (trail.enable && trail.length > minimumLength && trailFill) {\r\n            if (trailFill.color) {\r\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\r\n            }\r\n            else if (trailFill.image) {\r\n                this._paintImage(trailFill.image, trailFill.opacity);\r\n            }\r\n        }\r\n        else if (options.clear) {\r\n            this.draw(ctx => {\r\n                clear(ctx, this.size);\r\n            });\r\n        }\r\n    }\r\n    destroy() {\r\n        this.stop();\r\n        if (this._generated) {\r\n            const element = this.element;\r\n            element?.remove();\r\n            this.element = undefined;\r\n        }\r\n        else {\r\n            this._resetOriginalStyle();\r\n        }\r\n        this._preDrawUpdaters = [];\r\n        this._postDrawUpdaters = [];\r\n        this._resizePlugins = [];\r\n        this._colorPlugins = [];\r\n    }\r\n    draw(cb) {\r\n        const ctx = this._context;\r\n        if (!ctx) {\r\n            return;\r\n        }\r\n        return cb(ctx);\r\n    }\r\n    drawAsync(cb) {\r\n        const ctx = this._context;\r\n        if (!ctx) {\r\n            return undefined;\r\n        }\r\n        return cb(ctx);\r\n    }\r\n    drawParticle(particle, delta) {\r\n        if (particle.spawning || particle.destroyed) {\r\n            return;\r\n        }\r\n        const radius = particle.getRadius();\r\n        if (radius <= minimumSize) {\r\n            return;\r\n        }\r\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\r\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\r\n        if (!fColor) {\r\n            fColor = pfColor;\r\n        }\r\n        if (!sColor) {\r\n            sColor = psColor;\r\n        }\r\n        if (!fColor && !sColor) {\r\n            return;\r\n        }\r\n        this.draw((ctx) => {\r\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zIndexFactor = zIndexFactorOffset - particle.zIndexFactor, zOpacityFactor = zIndexFactor ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? defaultOpacity, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\r\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\r\n            };\r\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\r\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\r\n            drawParticle({\r\n                container,\r\n                context: ctx,\r\n                particle,\r\n                delta,\r\n                colorStyles,\r\n                backgroundMask: options.backgroundMask.enable,\r\n                composite: options.backgroundMask.composite,\r\n                radius: radius * zIndexFactor ** zIndexOptions.sizeRate,\r\n                opacity: zOpacity,\r\n                shadow: particle.options.shadow,\r\n                transform,\r\n            });\r\n            this._applyPostDrawUpdaters(particle);\r\n        });\r\n    }\r\n    drawParticlePlugin(plugin, particle, delta) {\r\n        this.draw(ctx => drawParticlePlugin(ctx, plugin, particle, delta));\r\n    }\r\n    drawPlugin(plugin, delta) {\r\n        this.draw(ctx => drawPlugin(ctx, plugin, delta));\r\n    }\r\n    async init() {\r\n        this._safeMutationObserver(obs => obs.disconnect());\r\n        this._mutationObserver = safeMutationObserver(records => {\r\n            for (const record of records) {\r\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\r\n                    this._repairStyle();\r\n                }\r\n            }\r\n        });\r\n        this.resize();\r\n        this._initStyle();\r\n        await this._initCover();\r\n        try {\r\n            await this._initTrail();\r\n        }\r\n        catch (e) {\r\n            getLogger().error(e);\r\n        }\r\n        this.initBackground();\r\n        this._safeMutationObserver(obs => {\r\n            if (!this.element || !(this.element instanceof Node)) {\r\n                return;\r\n            }\r\n            obs.observe(this.element, { attributes: true });\r\n        });\r\n        this.initUpdaters();\r\n        this.initPlugins();\r\n        this.paint();\r\n    }\r\n    initBackground() {\r\n        const options = this.container.actualOptions, background = options.background, element = this.element;\r\n        if (!element) {\r\n            return;\r\n        }\r\n        const elementStyle = element.style;\r\n        if (!elementStyle) {\r\n            return;\r\n        }\r\n        if (background.color) {\r\n            const color = rangeColorToRgb(this._engine, background.color);\r\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\r\n        }\r\n        else {\r\n            elementStyle.backgroundColor = \"\";\r\n        }\r\n        elementStyle.backgroundImage = background.image || \"\";\r\n        elementStyle.backgroundPosition = background.position || \"\";\r\n        elementStyle.backgroundRepeat = background.repeat || \"\";\r\n        elementStyle.backgroundSize = background.size || \"\";\r\n    }\r\n    initPlugins() {\r\n        this._resizePlugins = [];\r\n        for (const plugin of this.container.plugins.values()) {\r\n            if (plugin.resize) {\r\n                this._resizePlugins.push(plugin);\r\n            }\r\n            if (plugin.particleFillColor ?? plugin.particleStrokeColor) {\r\n                this._colorPlugins.push(plugin);\r\n            }\r\n        }\r\n    }\r\n    initUpdaters() {\r\n        this._preDrawUpdaters = [];\r\n        this._postDrawUpdaters = [];\r\n        for (const updater of this.container.particles.updaters) {\r\n            if (updater.afterDraw) {\r\n                this._postDrawUpdaters.push(updater);\r\n            }\r\n            if (updater.getColorStyles ?? updater.getTransformValues ?? updater.beforeDraw) {\r\n                this._preDrawUpdaters.push(updater);\r\n            }\r\n        }\r\n    }\r\n    loadCanvas(canvas) {\r\n        if (this._generated && this.element) {\r\n            this.element.remove();\r\n        }\r\n        this._generated =\r\n            canvas.dataset && generatedAttribute in canvas.dataset\r\n                ? canvas.dataset[generatedAttribute] === \"true\"\r\n                : this._generated;\r\n        this.element = canvas;\r\n        this.element.ariaHidden = \"true\";\r\n        this._originalStyle = cloneStyle(this.element.style);\r\n        const standardSize = this._standardSize;\r\n        standardSize.height = canvas.offsetHeight;\r\n        standardSize.width = canvas.offsetWidth;\r\n        const pxRatio = this.container.retina.pixelRatio, retinaSize = this.size;\r\n        canvas.height = retinaSize.height = standardSize.height * pxRatio;\r\n        canvas.width = retinaSize.width = standardSize.width * pxRatio;\r\n        this._context = this.element.getContext(\"2d\");\r\n        this._safeMutationObserver(obs => obs.disconnect());\r\n        this.container.retina.init();\r\n        this.initBackground();\r\n        this._safeMutationObserver(obs => {\r\n            if (!this.element || !(this.element instanceof Node)) {\r\n                return;\r\n            }\r\n            obs.observe(this.element, { attributes: true });\r\n        });\r\n    }\r\n    paint() {\r\n        const options = this.container.actualOptions;\r\n        this.draw(ctx => {\r\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\r\n                clear(ctx, this.size);\r\n                if (this._coverImage) {\r\n                    this._paintImage(this._coverImage.image, this._coverImage.opacity);\r\n                }\r\n                else if (this._coverColorStyle) {\r\n                    this._paintBase(this._coverColorStyle);\r\n                }\r\n                else {\r\n                    this._paintBase();\r\n                }\r\n            }\r\n            else {\r\n                this._paintBase();\r\n            }\r\n        });\r\n    }\r\n    resize() {\r\n        if (!this.element) {\r\n            return false;\r\n        }\r\n        const container = this.container, currentSize = container.canvas._standardSize, newSize = {\r\n            width: this.element.offsetWidth,\r\n            height: this.element.offsetHeight,\r\n        }, pxRatio = container.retina.pixelRatio, retinaSize = {\r\n            width: newSize.width * pxRatio,\r\n            height: newSize.height * pxRatio,\r\n        };\r\n        if (newSize.height === currentSize.height &&\r\n            newSize.width === currentSize.width &&\r\n            retinaSize.height === this.element.height &&\r\n            retinaSize.width === this.element.width) {\r\n            return false;\r\n        }\r\n        const oldSize = { ...currentSize };\r\n        currentSize.height = newSize.height;\r\n        currentSize.width = newSize.width;\r\n        const canvasSize = this.size;\r\n        this.element.width = canvasSize.width = retinaSize.width;\r\n        this.element.height = canvasSize.height = retinaSize.height;\r\n        if (this.container.started) {\r\n            container.particles.setResizeFactor({\r\n                width: currentSize.width / oldSize.width,\r\n                height: currentSize.height / oldSize.height,\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n    stop() {\r\n        this._safeMutationObserver(obs => obs.disconnect());\r\n        this._mutationObserver = undefined;\r\n        this.draw(ctx => clear(ctx, this.size));\r\n    }\r\n    async windowResize() {\r\n        if (!this.element || !this.resize()) {\r\n            return;\r\n        }\r\n        const container = this.container, needsRefresh = container.updateActualOptions();\r\n        container.particles.setDensity();\r\n        this._applyResizePlugins();\r\n        if (needsRefresh) {\r\n            await container.refresh();\r\n        }\r\n    }\r\n}\r\n", "export var InteractivityDetect;\r\n(function (InteractivityDetect) {\r\n    InteractivityDetect[\"canvas\"] = \"canvas\";\r\n    InteractivityDetect[\"parent\"] = \"parent\";\r\n    InteractivityDetect[\"window\"] = \"window\";\r\n})(InteractivityDetect || (InteractivityDetect = {}));\r\n", "import { double, lengthOffset, millisecondsToSeconds, minCoordinate, mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchDelay, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants.js\";\r\nimport { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\r\nimport { InteractivityDetect } from \"../../Enums/InteractivityDetect.js\";\r\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\r\nfunction manageListener(element, event, handler, add, options) {\r\n    if (add) {\r\n        let addOptions = { passive: true };\r\n        if (isBoolean(options)) {\r\n            addOptions.capture = options;\r\n        }\r\n        else if (options !== undefined) {\r\n            addOptions = options;\r\n        }\r\n        element.addEventListener(event, handler, addOptions);\r\n    }\r\n    else {\r\n        const removeOptions = options;\r\n        element.removeEventListener(event, handler, removeOptions);\r\n    }\r\n}\r\nexport class EventListeners {\r\n    constructor(container) {\r\n        this.container = container;\r\n        this._doMouseTouchClick = e => {\r\n            const container = this.container, options = container.actualOptions;\r\n            if (this._canPush) {\r\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\r\n                if (!mousePos) {\r\n                    return;\r\n                }\r\n                mouseInteractivity.clickPosition = { ...mousePos };\r\n                mouseInteractivity.clickTime = new Date().getTime();\r\n                const onClick = options.interactivity.events.onClick;\r\n                executeOnSingleOrMultiple(onClick.mode, mode => this.container.handleClickMode(mode));\r\n            }\r\n            if (e.type === \"touchend\") {\r\n                setTimeout(() => this._mouseTouchFinish(), touchDelay);\r\n            }\r\n        };\r\n        this._handleThemeChange = (e) => {\r\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find(theme => theme.name === themeName);\r\n            if (theme?.default.auto) {\r\n                void container.loadTheme(themeName);\r\n            }\r\n        };\r\n        this._handleVisibilityChange = () => {\r\n            const container = this.container, options = container.actualOptions;\r\n            this._mouseTouchFinish();\r\n            if (!options.pauseOnBlur) {\r\n                return;\r\n            }\r\n            if (document?.hidden) {\r\n                container.pageHidden = true;\r\n                container.pause();\r\n            }\r\n            else {\r\n                container.pageHidden = false;\r\n                if (container.animationStatus) {\r\n                    void container.play(true);\r\n                }\r\n                else {\r\n                    void container.draw(true);\r\n                }\r\n            }\r\n        };\r\n        this._handleWindowResize = () => {\r\n            if (this._resizeTimeout) {\r\n                clearTimeout(this._resizeTimeout);\r\n                delete this._resizeTimeout;\r\n            }\r\n            const handleResize = async () => {\r\n                const canvas = this.container.canvas;\r\n                await canvas?.windowResize();\r\n            };\r\n            this._resizeTimeout = setTimeout(() => void handleResize(), this.container.actualOptions.interactivity.events.resize.delay * millisecondsToSeconds);\r\n        };\r\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\r\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, interactivityEl = container.interactivity.element;\r\n            if (!interactivityEl) {\r\n                return;\r\n            }\r\n            const html = interactivityEl, canvasEl = container.canvas.element;\r\n            if (canvasEl) {\r\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\r\n            }\r\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\r\n                return;\r\n            }\r\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\r\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\r\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\r\n            if (!options.interactivity.events.onClick.enable) {\r\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\r\n            }\r\n            else {\r\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\r\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\r\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\r\n            }\r\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\r\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\r\n        };\r\n        this._manageListeners = add => {\r\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\r\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\r\n            if (detectType === InteractivityDetect.window) {\r\n                container.interactivity.element = window;\r\n                mouseLeaveTmpEvent = mouseOutEvent;\r\n            }\r\n            else if (detectType === InteractivityDetect.parent && canvasEl) {\r\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\r\n            }\r\n            else {\r\n                container.interactivity.element = canvasEl;\r\n            }\r\n            this._manageMediaMatch(add);\r\n            this._manageResize(add);\r\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\r\n            if (document) {\r\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\r\n            }\r\n        };\r\n        this._manageMediaMatch = add => {\r\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\r\n            if (!mediaMatch) {\r\n                return;\r\n            }\r\n            if (mediaMatch.addEventListener !== undefined) {\r\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\r\n                return;\r\n            }\r\n            if (mediaMatch.addListener === undefined) {\r\n                return;\r\n            }\r\n            if (add) {\r\n                mediaMatch.addListener(handlers.oldThemeChange);\r\n            }\r\n            else {\r\n                mediaMatch.removeListener(handlers.oldThemeChange);\r\n            }\r\n        };\r\n        this._manageResize = add => {\r\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\r\n            if (!options.interactivity.events.resize) {\r\n                return;\r\n            }\r\n            if (typeof ResizeObserver === \"undefined\") {\r\n                manageListener(window, resizeEvent, handlers.resize, add);\r\n                return;\r\n            }\r\n            const canvasEl = container.canvas.element;\r\n            if (this._resizeObserver && !add) {\r\n                if (canvasEl) {\r\n                    this._resizeObserver.unobserve(canvasEl);\r\n                }\r\n                this._resizeObserver.disconnect();\r\n                delete this._resizeObserver;\r\n            }\r\n            else if (!this._resizeObserver && add && canvasEl) {\r\n                this._resizeObserver = new ResizeObserver((entries) => {\r\n                    const entry = entries.find(e => e.target === canvasEl);\r\n                    if (!entry) {\r\n                        return;\r\n                    }\r\n                    this._handleWindowResize();\r\n                });\r\n                this._resizeObserver.observe(canvasEl);\r\n            }\r\n        };\r\n        this._mouseDown = () => {\r\n            const { interactivity } = this.container;\r\n            if (!interactivity) {\r\n                return;\r\n            }\r\n            const { mouse } = interactivity;\r\n            mouse.clicking = true;\r\n            mouse.downPosition = mouse.position;\r\n        };\r\n        this._mouseTouchClick = e => {\r\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\r\n            mouse.inside = true;\r\n            let handled = false;\r\n            const mousePosition = mouse.position;\r\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\r\n                return;\r\n            }\r\n            for (const plugin of container.plugins.values()) {\r\n                if (!plugin.clickPositionValid) {\r\n                    continue;\r\n                }\r\n                handled = plugin.clickPositionValid(mousePosition);\r\n                if (handled) {\r\n                    break;\r\n                }\r\n            }\r\n            if (!handled) {\r\n                this._doMouseTouchClick(e);\r\n            }\r\n            mouse.clicking = false;\r\n        };\r\n        this._mouseTouchFinish = () => {\r\n            const interactivity = this.container.interactivity;\r\n            if (!interactivity) {\r\n                return;\r\n            }\r\n            const mouse = interactivity.mouse;\r\n            delete mouse.position;\r\n            delete mouse.clickPosition;\r\n            delete mouse.downPosition;\r\n            interactivity.status = mouseLeaveEvent;\r\n            mouse.inside = false;\r\n            mouse.clicking = false;\r\n        };\r\n        this._mouseTouchMove = e => {\r\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\r\n            if (!interactivity?.element) {\r\n                return;\r\n            }\r\n            interactivity.mouse.inside = true;\r\n            let pos;\r\n            if (e.type.startsWith(\"pointer\")) {\r\n                this._canPush = true;\r\n                const mouseEvent = e;\r\n                if (interactivity.element === window) {\r\n                    if (canvasEl) {\r\n                        const clientRect = canvasEl.getBoundingClientRect();\r\n                        pos = {\r\n                            x: mouseEvent.clientX - clientRect.left,\r\n                            y: mouseEvent.clientY - clientRect.top,\r\n                        };\r\n                    }\r\n                }\r\n                else if (options.interactivity.detectsOn === InteractivityDetect.parent) {\r\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\r\n                    if (source && target && canvasEl) {\r\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\r\n                        pos = {\r\n                            x: mouseEvent.offsetX + double * sourceRect.left - (targetRect.left + canvasRect.left),\r\n                            y: mouseEvent.offsetY + double * sourceRect.top - (targetRect.top + canvasRect.top),\r\n                        };\r\n                    }\r\n                    else {\r\n                        pos = {\r\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\r\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\r\n                        };\r\n                    }\r\n                }\r\n                else if (mouseEvent.target === canvasEl) {\r\n                    pos = {\r\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\r\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\r\n                    };\r\n                }\r\n            }\r\n            else {\r\n                this._canPush = e.type !== \"touchmove\";\r\n                if (canvasEl) {\r\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset], canvasRect = canvasEl.getBoundingClientRect();\r\n                    pos = {\r\n                        x: lastTouch.clientX - (canvasRect.left ?? minCoordinate),\r\n                        y: lastTouch.clientY - (canvasRect.top ?? minCoordinate),\r\n                    };\r\n                }\r\n            }\r\n            const pxRatio = container.retina.pixelRatio;\r\n            if (pos) {\r\n                pos.x *= pxRatio;\r\n                pos.y *= pxRatio;\r\n            }\r\n            interactivity.mouse.position = pos;\r\n            interactivity.status = mouseMoveEvent;\r\n        };\r\n        this._touchEnd = e => {\r\n            const evt = e, touches = Array.from(evt.changedTouches);\r\n            for (const touch of touches) {\r\n                this._touches.delete(touch.identifier);\r\n            }\r\n            this._mouseTouchFinish();\r\n        };\r\n        this._touchEndClick = e => {\r\n            const evt = e, touches = Array.from(evt.changedTouches);\r\n            for (const touch of touches) {\r\n                this._touches.delete(touch.identifier);\r\n            }\r\n            this._mouseTouchClick(e);\r\n        };\r\n        this._touchStart = e => {\r\n            const evt = e, touches = Array.from(evt.changedTouches);\r\n            for (const touch of touches) {\r\n                this._touches.set(touch.identifier, performance.now());\r\n            }\r\n            this._mouseTouchMove(e);\r\n        };\r\n        this._canPush = true;\r\n        this._touches = new Map();\r\n        this._handlers = {\r\n            mouseDown: () => this._mouseDown(),\r\n            mouseLeave: () => this._mouseTouchFinish(),\r\n            mouseMove: (e) => this._mouseTouchMove(e),\r\n            mouseUp: (e) => this._mouseTouchClick(e),\r\n            touchStart: (e) => this._touchStart(e),\r\n            touchMove: (e) => this._mouseTouchMove(e),\r\n            touchEnd: (e) => this._touchEnd(e),\r\n            touchCancel: (e) => this._touchEnd(e),\r\n            touchEndClick: (e) => this._touchEndClick(e),\r\n            visibilityChange: () => this._handleVisibilityChange(),\r\n            themeChange: (e) => this._handleThemeChange(e),\r\n            oldThemeChange: (e) => this._handleThemeChange(e),\r\n            resize: () => {\r\n                this._handleWindowResize();\r\n            },\r\n        };\r\n    }\r\n    addListeners() {\r\n        this._manageListeners(true);\r\n    }\r\n    removeListeners() {\r\n        this._manageListeners(false);\r\n    }\r\n}\r\n", "export var EventType;\r\n(function (EventType) {\r\n    EventType[\"configAdded\"] = \"configAdded\";\r\n    EventType[\"containerInit\"] = \"containerInit\";\r\n    EventType[\"particlesSetup\"] = \"particlesSetup\";\r\n    EventType[\"containerStarted\"] = \"containerStarted\";\r\n    EventType[\"containerStopped\"] = \"containerStopped\";\r\n    EventType[\"containerDestroyed\"] = \"containerDestroyed\";\r\n    EventType[\"containerPaused\"] = \"containerPaused\";\r\n    EventType[\"containerPlay\"] = \"containerPlay\";\r\n    EventType[\"containerBuilt\"] = \"containerBuilt\";\r\n    EventType[\"particleAdded\"] = \"particleAdded\";\r\n    EventType[\"particleDestroyed\"] = \"particleDestroyed\";\r\n    EventType[\"particleRemoved\"] = \"particleRemoved\";\r\n})(EventType || (EventType = {}));\r\n", "import { isArray, isNull, isString } from \"../../Utils/TypeUtils.js\";\r\nexport class OptionsColor {\r\n    constructor() {\r\n        this.value = \"\";\r\n    }\r\n    static create(source, data) {\r\n        const color = new OptionsColor();\r\n        color.load(source);\r\n        if (data !== undefined) {\r\n            if (isString(data) || isArray(data)) {\r\n                color.load({ value: data });\r\n            }\r\n            else {\r\n                color.load(data);\r\n            }\r\n        }\r\n        return color;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (!isNull(data.value)) {\r\n            this.value = data.value;\r\n        }\r\n    }\r\n}\r\n", "import { OptionsColor } from \"../OptionsColor.js\";\r\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\r\nexport class Background {\r\n    constructor() {\r\n        this.color = new OptionsColor();\r\n        this.color.value = \"\";\r\n        this.image = \"\";\r\n        this.position = \"\";\r\n        this.repeat = \"\";\r\n        this.size = \"\";\r\n        this.opacity = 1;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.color !== undefined) {\r\n            this.color = OptionsColor.create(this.color, data.color);\r\n        }\r\n        if (data.image !== undefined) {\r\n            this.image = data.image;\r\n        }\r\n        if (data.position !== undefined) {\r\n            this.position = data.position;\r\n        }\r\n        if (data.repeat !== undefined) {\r\n            this.repeat = data.repeat;\r\n        }\r\n        if (data.size !== undefined) {\r\n            this.size = data.size;\r\n        }\r\n        if (data.opacity !== undefined) {\r\n            this.opacity = data.opacity;\r\n        }\r\n    }\r\n}\r\n", "import { OptionsColor } from \"../OptionsColor.js\";\r\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\r\nexport class BackgroundMaskCover {\r\n    constructor() {\r\n        this.opacity = 1;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.color !== undefined) {\r\n            this.color = OptionsColor.create(this.color, data.color);\r\n        }\r\n        if (data.image !== undefined) {\r\n            this.image = data.image;\r\n        }\r\n        if (data.opacity !== undefined) {\r\n            this.opacity = data.opacity;\r\n        }\r\n    }\r\n}\r\n", "import { isNull, isString } from \"../../../Utils/TypeUtils.js\";\r\nimport { BackgroundMaskCover } from \"./BackgroundMaskCover.js\";\r\nexport class BackgroundMask {\r\n    constructor() {\r\n        this.composite = \"destination-out\";\r\n        this.cover = new BackgroundMaskCover();\r\n        this.enable = false;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.composite !== undefined) {\r\n            this.composite = data.composite;\r\n        }\r\n        if (data.cover !== undefined) {\r\n            const cover = data.cover, color = (isString(data.cover) ? { color: data.cover } : data.cover);\r\n            this.cover.load(cover.color !== undefined || cover.image !== undefined ? cover : { color: color });\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n    }\r\n}\r\n", "import { isNull } from \"../../../Utils/TypeUtils.js\";\r\nexport class FullScreen {\r\n    constructor() {\r\n        this.enable = true;\r\n        this.zIndex = 0;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.zIndex !== undefined) {\r\n            this.zIndex = data.zIndex;\r\n        }\r\n    }\r\n}\r\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nexport class ClickEvent {\r\n    constructor() {\r\n        this.enable = false;\r\n        this.mode = [];\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.mode !== undefined) {\r\n            this.mode = data.mode;\r\n        }\r\n    }\r\n}\r\n", "export var DivType;\r\n(function (DivType) {\r\n    DivType[\"circle\"] = \"circle\";\r\n    DivType[\"rectangle\"] = \"rectangle\";\r\n})(DivType || (DivType = {}));\r\n", "import { DivType } from \"../../../../Enums/Types/DivType.js\";\r\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nexport class DivEvent {\r\n    constructor() {\r\n        this.selectors = [];\r\n        this.enable = false;\r\n        this.mode = [];\r\n        this.type = DivType.circle;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.selectors !== undefined) {\r\n            this.selectors = data.selectors;\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.mode !== undefined) {\r\n            this.mode = data.mode;\r\n        }\r\n        if (data.type !== undefined) {\r\n            this.type = data.type;\r\n        }\r\n    }\r\n}\r\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nexport class Parallax {\r\n    constructor() {\r\n        this.enable = false;\r\n        this.force = 2;\r\n        this.smooth = 10;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.force !== undefined) {\r\n            this.force = data.force;\r\n        }\r\n        if (data.smooth !== undefined) {\r\n            this.smooth = data.smooth;\r\n        }\r\n    }\r\n}\r\n", "import { Parallax } from \"./Parallax.js\";\r\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nexport class HoverEvent {\r\n    constructor() {\r\n        this.enable = false;\r\n        this.mode = [];\r\n        this.parallax = new Parallax();\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.mode !== undefined) {\r\n            this.mode = data.mode;\r\n        }\r\n        this.parallax.load(data.parallax);\r\n    }\r\n}\r\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nexport class ResizeEvent {\r\n    constructor() {\r\n        this.delay = 0.5;\r\n        this.enable = true;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.delay !== undefined) {\r\n            this.delay = data.delay;\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n    }\r\n}\r\n", "import { ClickEvent } from \"./ClickEvent.js\";\r\nimport { DivEvent } from \"./DivEvent.js\";\r\nimport { HoverEvent } from \"./HoverEvent.js\";\r\nimport { ResizeEvent } from \"./ResizeEvent.js\";\r\nimport { executeOnSingleOrMultiple } from \"../../../../Utils/Utils.js\";\r\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nexport class Events {\r\n    constructor() {\r\n        this.onClick = new ClickEvent();\r\n        this.onDiv = new DivEvent();\r\n        this.onHover = new HoverEvent();\r\n        this.resize = new ResizeEvent();\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        this.onClick.load(data.onClick);\r\n        const onDiv = data.onDiv;\r\n        if (onDiv !== undefined) {\r\n            this.onDiv = executeOnSingleOrMultiple(onDiv, t => {\r\n                const tmp = new DivEvent();\r\n                tmp.load(t);\r\n                return tmp;\r\n            });\r\n        }\r\n        this.onHover.load(data.onHover);\r\n        this.resize.load(data.resize);\r\n    }\r\n}\r\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nexport class Modes {\r\n    constructor(engine, container) {\r\n        this._engine = engine;\r\n        this._container = container;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (!this._container) {\r\n            return;\r\n        }\r\n        const interactors = this._engine.interactors.get(this._container);\r\n        if (!interactors) {\r\n            return;\r\n        }\r\n        for (const interactor of interactors) {\r\n            if (!interactor.loadModeOptions) {\r\n                continue;\r\n            }\r\n            interactor.loadModeOptions(this, data);\r\n        }\r\n    }\r\n}\r\n", "import { Events } from \"./Events/Events.js\";\r\nimport { InteractivityDetect } from \"../../../Enums/InteractivityDetect.js\";\r\nimport { Modes } from \"./Modes/Modes.js\";\r\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\r\nexport class Interactivity {\r\n    constructor(engine, container) {\r\n        this.detectsOn = InteractivityDetect.window;\r\n        this.events = new Events();\r\n        this.modes = new Modes(engine, container);\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        const detectsOn = data.detectsOn;\r\n        if (detectsOn !== undefined) {\r\n            this.detectsOn = detectsOn;\r\n        }\r\n        this.events.load(data.events);\r\n        this.modes.load(data.modes);\r\n    }\r\n}\r\n", "import { PixelMode } from \"../../Enums/Modes/PixelMode.js\";\r\nimport { deepExtend } from \"../../Utils/Utils.js\";\r\nimport { isNull } from \"../../Utils/TypeUtils.js\";\r\nimport { manualDefaultPosition } from \"../../Core/Utils/Constants.js\";\r\nexport class ManualParticle {\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.position) {\r\n            this.position = {\r\n                x: data.position.x ?? manualDefaultPosition,\r\n                y: data.position.y ?? manualDefaultPosition,\r\n                mode: data.position.mode ?? PixelMode.percent,\r\n            };\r\n        }\r\n        if (data.options) {\r\n            this.options = deepExtend({}, data.options);\r\n        }\r\n    }\r\n}\r\n", "export var ResponsiveMode;\r\n(function (ResponsiveMode) {\r\n    ResponsiveMode[\"screen\"] = \"screen\";\r\n    ResponsiveMode[\"canvas\"] = \"canvas\";\r\n})(ResponsiveMode || (ResponsiveMode = {}));\r\n", "import { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\r\nimport { deepExtend } from \"../../Utils/Utils.js\";\r\nimport { isNull } from \"../../Utils/TypeUtils.js\";\r\nexport class Responsive {\r\n    constructor() {\r\n        this.maxWidth = Infinity;\r\n        this.options = {};\r\n        this.mode = ResponsiveMode.canvas;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (!isNull(data.maxWidth)) {\r\n            this.maxWidth = data.maxWidth;\r\n        }\r\n        if (!isNull(data.mode)) {\r\n            if (data.mode === ResponsiveMode.screen) {\r\n                this.mode = ResponsiveMode.screen;\r\n            }\r\n            else {\r\n                this.mode = ResponsiveMode.canvas;\r\n            }\r\n        }\r\n        if (!isNull(data.options)) {\r\n            this.options = deepExtend({}, data.options);\r\n        }\r\n    }\r\n}\r\n", "export var ThemeMode;\r\n(function (ThemeMode) {\r\n    ThemeMode[\"any\"] = \"any\";\r\n    ThemeMode[\"dark\"] = \"dark\";\r\n    ThemeMode[\"light\"] = \"light\";\r\n})(ThemeMode || (ThemeMode = {}));\r\n", "import { ThemeMode } from \"../../../Enums/Modes/ThemeMode.js\";\r\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\r\nexport class ThemeDefault {\r\n    constructor() {\r\n        this.auto = false;\r\n        this.mode = ThemeMode.any;\r\n        this.value = false;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.auto !== undefined) {\r\n            this.auto = data.auto;\r\n        }\r\n        if (data.mode !== undefined) {\r\n            this.mode = data.mode;\r\n        }\r\n        if (data.value !== undefined) {\r\n            this.value = data.value;\r\n        }\r\n    }\r\n}\r\n", "import { ThemeDefault } from \"./ThemeDefault.js\";\r\nimport { deepExtend } from \"../../../Utils/Utils.js\";\r\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\r\nexport class Theme {\r\n    constructor() {\r\n        this.name = \"\";\r\n        this.default = new ThemeDefault();\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.name !== undefined) {\r\n            this.name = data.name;\r\n        }\r\n        this.default.load(data.default);\r\n        if (data.options !== undefined) {\r\n            this.options = deepExtend({}, data.options);\r\n        }\r\n    }\r\n}\r\n", "import { AnimationMode } from \"../../Enums/Modes/AnimationMode.js\";\r\nimport { StartValueType } from \"../../Enums/Types/StartValueType.js\";\r\nimport { isNull } from \"../../Utils/TypeUtils.js\";\r\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\r\nexport class AnimationOptions {\r\n    constructor() {\r\n        this.count = 0;\r\n        this.enable = false;\r\n        this.speed = 1;\r\n        this.decay = 0;\r\n        this.delay = 0;\r\n        this.sync = false;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.count !== undefined) {\r\n            this.count = setRangeValue(data.count);\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.speed !== undefined) {\r\n            this.speed = setRangeValue(data.speed);\r\n        }\r\n        if (data.decay !== undefined) {\r\n            this.decay = setRangeValue(data.decay);\r\n        }\r\n        if (data.delay !== undefined) {\r\n            this.delay = setRangeValue(data.delay);\r\n        }\r\n        if (data.sync !== undefined) {\r\n            this.sync = data.sync;\r\n        }\r\n    }\r\n}\r\nexport class RangedAnimationOptions extends AnimationOptions {\r\n    constructor() {\r\n        super();\r\n        this.mode = AnimationMode.auto;\r\n        this.startValue = StartValueType.random;\r\n    }\r\n    load(data) {\r\n        super.load(data);\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.mode !== undefined) {\r\n            this.mode = data.mode;\r\n        }\r\n        if (data.startValue !== undefined) {\r\n            this.startValue = data.startValue;\r\n        }\r\n    }\r\n}\r\n", "import { AnimationOptions } from \"./AnimationOptions.js\";\r\nimport { isNull } from \"../../Utils/TypeUtils.js\";\r\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\r\nexport class ColorAnimation extends AnimationOptions {\r\n    constructor() {\r\n        super();\r\n        this.offset = 0;\r\n        this.sync = true;\r\n    }\r\n    load(data) {\r\n        super.load(data);\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.offset !== undefined) {\r\n            this.offset = setRangeValue(data.offset);\r\n        }\r\n    }\r\n}\r\n", "import { ColorAnimation } from \"./ColorAnimation.js\";\r\nimport { isNull } from \"../../Utils/TypeUtils.js\";\r\nexport class HslAnimation {\r\n    constructor() {\r\n        this.h = new ColorAnimation();\r\n        this.s = new ColorAnimation();\r\n        this.l = new ColorAnimation();\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        this.h.load(data.h);\r\n        this.s.load(data.s);\r\n        this.l.load(data.l);\r\n    }\r\n}\r\n", "import { isArray, isNull, isString } from \"../../Utils/TypeUtils.js\";\r\nimport { HslAnimation } from \"./HslAnimation.js\";\r\nimport { OptionsColor } from \"./OptionsColor.js\";\r\nexport class AnimatableColor extends OptionsColor {\r\n    constructor() {\r\n        super();\r\n        this.animation = new HslAnimation();\r\n    }\r\n    static create(source, data) {\r\n        const color = new AnimatableColor();\r\n        color.load(source);\r\n        if (data !== undefined) {\r\n            if (isString(data) || isArray(data)) {\r\n                color.load({ value: data });\r\n            }\r\n            else {\r\n                color.load(data);\r\n            }\r\n        }\r\n        return color;\r\n    }\r\n    load(data) {\r\n        super.load(data);\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        const colorAnimation = data.animation;\r\n        if (colorAnimation !== undefined) {\r\n            if (colorAnimation.enable !== undefined) {\r\n                this.animation.h.load(colorAnimation);\r\n            }\r\n            else {\r\n                this.animation.load(data.animation);\r\n            }\r\n        }\r\n    }\r\n}\r\n", "export var CollisionMode;\r\n(function (CollisionMode) {\r\n    CollisionMode[\"absorb\"] = \"absorb\";\r\n    CollisionMode[\"bounce\"] = \"bounce\";\r\n    CollisionMode[\"destroy\"] = \"destroy\";\r\n})(CollisionMode || (CollisionMode = {}));\r\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nexport class CollisionsAbsorb {\r\n    constructor() {\r\n        this.speed = 2;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.speed !== undefined) {\r\n            this.speed = data.speed;\r\n        }\r\n    }\r\n}\r\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nexport class CollisionsOverlap {\r\n    constructor() {\r\n        this.enable = true;\r\n        this.retries = 0;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.retries !== undefined) {\r\n            this.retries = data.retries;\r\n        }\r\n    }\r\n}\r\n", "import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions.js\";\r\nimport { isNull } from \"../../Utils/TypeUtils.js\";\r\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\r\nexport class ValueWithRandom {\r\n    constructor() {\r\n        this.value = 0;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (!isNull(data.value)) {\r\n            this.value = setRangeValue(data.value);\r\n        }\r\n    }\r\n}\r\nexport class AnimationValueWithRandom extends ValueWithRandom {\r\n    constructor() {\r\n        super();\r\n        this.animation = new AnimationOptions();\r\n    }\r\n    load(data) {\r\n        super.load(data);\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        const animation = data.animation;\r\n        if (animation !== undefined) {\r\n            this.animation.load(animation);\r\n        }\r\n    }\r\n}\r\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\r\n    constructor() {\r\n        super();\r\n        this.animation = new RangedAnimationOptions();\r\n    }\r\n    load(data) {\r\n        super.load(data);\r\n    }\r\n}\r\n", "import { ValueWithRandom } from \"../../ValueWithRandom.js\";\r\nexport class ParticlesBounceFactor extends ValueWithRandom {\r\n    constructor() {\r\n        super();\r\n        this.value = 1;\r\n    }\r\n}\r\n", "import { ParticlesBounceFactor } from \"./ParticlesBounceFactor.js\";\r\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nexport class ParticlesBounce {\r\n    constructor() {\r\n        this.horizontal = new ParticlesBounceFactor();\r\n        this.vertical = new ParticlesBounceFactor();\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        this.horizontal.load(data.horizontal);\r\n        this.vertical.load(data.vertical);\r\n    }\r\n}\r\n", "import { CollisionMode } from \"../../../../Enums/Modes/CollisionMode.js\";\r\nimport { CollisionsAbsorb } from \"./CollisionsAbsorb.js\";\r\nimport { CollisionsOverlap } from \"./CollisionsOverlap.js\";\r\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce.js\";\r\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\r\nexport class Collisions {\r\n    constructor() {\r\n        this.absorb = new CollisionsAbsorb();\r\n        this.bounce = new ParticlesBounce();\r\n        this.enable = false;\r\n        this.maxSpeed = 50;\r\n        this.mode = CollisionMode.bounce;\r\n        this.overlap = new CollisionsOverlap();\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        this.absorb.load(data.absorb);\r\n        this.bounce.load(data.bounce);\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.maxSpeed !== undefined) {\r\n            this.maxSpeed = setRangeValue(data.maxSpeed);\r\n        }\r\n        if (data.mode !== undefined) {\r\n            this.mode = data.mode;\r\n        }\r\n        this.overlap.load(data.overlap);\r\n    }\r\n}\r\n", "import { deepExtend } from \"../../../../Utils/Utils.js\";\r\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nexport class Effect {\r\n    constructor() {\r\n        this.close = true;\r\n        this.fill = true;\r\n        this.options = {};\r\n        this.type = [];\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        const options = data.options;\r\n        if (options !== undefined) {\r\n            for (const effect in options) {\r\n                const item = options[effect];\r\n                if (item) {\r\n                    this.options[effect] = deepExtend(this.options[effect] ?? {}, item);\r\n                }\r\n            }\r\n        }\r\n        if (data.close !== undefined) {\r\n            this.close = data.close;\r\n        }\r\n        if (data.fill !== undefined) {\r\n            this.fill = data.fill;\r\n        }\r\n        if (data.type !== undefined) {\r\n            this.type = data.type;\r\n        }\r\n    }\r\n}\r\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\r\nexport class MoveAngle {\r\n    constructor() {\r\n        this.offset = 0;\r\n        this.value = 90;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.offset !== undefined) {\r\n            this.offset = setRangeValue(data.offset);\r\n        }\r\n        if (data.value !== undefined) {\r\n            this.value = setRangeValue(data.value);\r\n        }\r\n    }\r\n}\r\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\r\nexport class MoveAttract {\r\n    constructor() {\r\n        this.distance = 200;\r\n        this.enable = false;\r\n        this.rotate = {\r\n            x: 3000,\r\n            y: 3000,\r\n        };\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.distance !== undefined) {\r\n            this.distance = setRangeValue(data.distance);\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.rotate) {\r\n            const rotateX = data.rotate.x;\r\n            if (rotateX !== undefined) {\r\n                this.rotate.x = rotateX;\r\n            }\r\n            const rotateY = data.rotate.y;\r\n            if (rotateY !== undefined) {\r\n                this.rotate.y = rotateY;\r\n            }\r\n        }\r\n    }\r\n}\r\n", "import { PixelMode } from \"../../../../Enums/Modes/PixelMode.js\";\r\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nexport class MoveCenter {\r\n    constructor() {\r\n        this.x = 50;\r\n        this.y = 50;\r\n        this.mode = PixelMode.percent;\r\n        this.radius = 0;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.x !== undefined) {\r\n            this.x = data.x;\r\n        }\r\n        if (data.y !== undefined) {\r\n            this.y = data.y;\r\n        }\r\n        if (data.mode !== undefined) {\r\n            this.mode = data.mode;\r\n        }\r\n        if (data.radius !== undefined) {\r\n            this.radius = data.radius;\r\n        }\r\n    }\r\n}\r\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\r\nexport class MoveGravity {\r\n    constructor() {\r\n        this.acceleration = 9.81;\r\n        this.enable = false;\r\n        this.inverse = false;\r\n        this.maxSpeed = 50;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.acceleration !== undefined) {\r\n            this.acceleration = setRangeValue(data.acceleration);\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.inverse !== undefined) {\r\n            this.inverse = data.inverse;\r\n        }\r\n        if (data.maxSpeed !== undefined) {\r\n            this.maxSpeed = setRangeValue(data.maxSpeed);\r\n        }\r\n    }\r\n}\r\n", "import { ValueWithRandom } from \"../../../ValueWithRandom.js\";\r\nimport { deepExtend } from \"../../../../../Utils/Utils.js\";\r\nimport { isNull } from \"../../../../../Utils/TypeUtils.js\";\r\nexport class MovePath {\r\n    constructor() {\r\n        this.clamp = true;\r\n        this.delay = new ValueWithRandom();\r\n        this.enable = false;\r\n        this.options = {};\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.clamp !== undefined) {\r\n            this.clamp = data.clamp;\r\n        }\r\n        this.delay.load(data.delay);\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        this.generator = data.generator;\r\n        if (data.options) {\r\n            this.options = deepExtend(this.options, data.options);\r\n        }\r\n    }\r\n}\r\n", "import { OptionsColor } from \"../../OptionsColor.js\";\r\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nexport class MoveTrailFill {\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.color !== undefined) {\r\n            this.color = OptionsColor.create(this.color, data.color);\r\n        }\r\n        if (data.image !== undefined) {\r\n            this.image = data.image;\r\n        }\r\n    }\r\n}\r\n", "import { MoveTrailFill } from \"./MoveTrailFill.js\";\r\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nexport class MoveTrail {\r\n    constructor() {\r\n        this.enable = false;\r\n        this.length = 10;\r\n        this.fill = new MoveTrailFill();\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.fill !== undefined) {\r\n            this.fill.load(data.fill);\r\n        }\r\n        if (data.length !== undefined) {\r\n            this.length = data.length;\r\n        }\r\n    }\r\n}\r\n", "export var OutMode;\r\n(function (OutMode) {\r\n    OutMode[\"bounce\"] = \"bounce\";\r\n    OutMode[\"none\"] = \"none\";\r\n    OutMode[\"out\"] = \"out\";\r\n    OutMode[\"destroy\"] = \"destroy\";\r\n    OutMode[\"split\"] = \"split\";\r\n})(OutMode || (OutMode = {}));\r\n", "import { OutMode } from \"../../../../Enums/Modes/OutMode.js\";\r\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nexport class OutModes {\r\n    constructor() {\r\n        this.default = OutMode.out;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.default !== undefined) {\r\n            this.default = data.default;\r\n        }\r\n        this.bottom = data.bottom ?? data.default;\r\n        this.left = data.left ?? data.default;\r\n        this.right = data.right ?? data.default;\r\n        this.top = data.top ?? data.default;\r\n    }\r\n}\r\n", "import { deepExtend } from \"../../../../Utils/Utils.js\";\r\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\r\nexport class Spin {\r\n    constructor() {\r\n        this.acceleration = 0;\r\n        this.enable = false;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.acceleration !== undefined) {\r\n            this.acceleration = setRangeValue(data.acceleration);\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.position) {\r\n            this.position = deepExtend({}, data.position);\r\n        }\r\n    }\r\n}\r\n", "import { MoveDirection } from \"../../../../Enums/Directions/MoveDirection.js\";\r\nimport { isNull, isNumber, isObject } from \"../../../../Utils/TypeUtils.js\";\r\nimport { MoveAngle } from \"./MoveAngle.js\";\r\nimport { MoveAttract } from \"./MoveAttract.js\";\r\nimport { MoveCenter } from \"./MoveCenter.js\";\r\nimport { MoveGravity } from \"./MoveGravity.js\";\r\nimport { MovePath } from \"./Path/MovePath.js\";\r\nimport { MoveTrail } from \"./MoveTrail.js\";\r\nimport { OutModes } from \"./OutModes.js\";\r\nimport { Spin } from \"./Spin.js\";\r\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\r\nexport class Move {\r\n    constructor() {\r\n        this.angle = new MoveAngle();\r\n        this.attract = new MoveAttract();\r\n        this.center = new MoveCenter();\r\n        this.decay = 0;\r\n        this.distance = {};\r\n        this.direction = MoveDirection.none;\r\n        this.drift = 0;\r\n        this.enable = false;\r\n        this.gravity = new MoveGravity();\r\n        this.path = new MovePath();\r\n        this.outModes = new OutModes();\r\n        this.random = false;\r\n        this.size = false;\r\n        this.speed = 2;\r\n        this.spin = new Spin();\r\n        this.straight = false;\r\n        this.trail = new MoveTrail();\r\n        this.vibrate = false;\r\n        this.warp = false;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\r\n        this.attract.load(data.attract);\r\n        this.center.load(data.center);\r\n        if (data.decay !== undefined) {\r\n            this.decay = setRangeValue(data.decay);\r\n        }\r\n        if (data.direction !== undefined) {\r\n            this.direction = data.direction;\r\n        }\r\n        if (data.distance !== undefined) {\r\n            this.distance = isNumber(data.distance)\r\n                ? {\r\n                    horizontal: data.distance,\r\n                    vertical: data.distance,\r\n                }\r\n                : { ...data.distance };\r\n        }\r\n        if (data.drift !== undefined) {\r\n            this.drift = setRangeValue(data.drift);\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        this.gravity.load(data.gravity);\r\n        const outModes = data.outModes;\r\n        if (outModes !== undefined) {\r\n            if (isObject(outModes)) {\r\n                this.outModes.load(outModes);\r\n            }\r\n            else {\r\n                this.outModes.load({\r\n                    default: outModes,\r\n                });\r\n            }\r\n        }\r\n        this.path.load(data.path);\r\n        if (data.random !== undefined) {\r\n            this.random = data.random;\r\n        }\r\n        if (data.size !== undefined) {\r\n            this.size = data.size;\r\n        }\r\n        if (data.speed !== undefined) {\r\n            this.speed = setRangeValue(data.speed);\r\n        }\r\n        this.spin.load(data.spin);\r\n        if (data.straight !== undefined) {\r\n            this.straight = data.straight;\r\n        }\r\n        this.trail.load(data.trail);\r\n        if (data.vibrate !== undefined) {\r\n            this.vibrate = data.vibrate;\r\n        }\r\n        if (data.warp !== undefined) {\r\n            this.warp = data.warp;\r\n        }\r\n    }\r\n}\r\n", "import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\r\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\r\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nexport class OpacityAnimation extends RangedAnimationOptions {\r\n    constructor() {\r\n        super();\r\n        this.destroy = DestroyType.none;\r\n        this.speed = 2;\r\n    }\r\n    load(data) {\r\n        super.load(data);\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.destroy !== undefined) {\r\n            this.destroy = data.destroy;\r\n        }\r\n    }\r\n}\r\n", "import { OpacityAnimation } from \"./OpacityAnimation.js\";\r\nimport { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\r\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nexport class Opacity extends RangedAnimationValueWithRandom {\r\n    constructor() {\r\n        super();\r\n        this.animation = new OpacityAnimation();\r\n        this.value = 1;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        super.load(data);\r\n        const animation = data.animation;\r\n        if (animation !== undefined) {\r\n            this.animation.load(animation);\r\n        }\r\n    }\r\n}\r\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nexport class ParticlesDensity {\r\n    constructor() {\r\n        this.enable = false;\r\n        this.width = 1920;\r\n        this.height = 1080;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        const width = data.width;\r\n        if (width !== undefined) {\r\n            this.width = width;\r\n        }\r\n        const height = data.height;\r\n        if (height !== undefined) {\r\n            this.height = height;\r\n        }\r\n    }\r\n}\r\n", "export var LimitMode;\r\n(function (LimitMode) {\r\n    LimitMode[\"delete\"] = \"delete\";\r\n    LimitMode[\"wait\"] = \"wait\";\r\n})(LimitMode || (LimitMode = {}));\r\n", "import { LimitMode } from \"../../../../Enums/Modes/LimitMode.js\";\r\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nexport class ParticlesNumberLimit {\r\n    constructor() {\r\n        this.mode = LimitMode.delete;\r\n        this.value = 0;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.mode !== undefined) {\r\n            this.mode = data.mode;\r\n        }\r\n        if (data.value !== undefined) {\r\n            this.value = data.value;\r\n        }\r\n    }\r\n}\r\n", "import { ParticlesDensity } from \"./ParticlesDensity.js\";\r\nimport { ParticlesNumberLimit } from \"./ParticlesNumberLimit.js\";\r\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nexport class ParticlesNumber {\r\n    constructor() {\r\n        this.density = new ParticlesDensity();\r\n        this.limit = new ParticlesNumberLimit();\r\n        this.value = 0;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        this.density.load(data.density);\r\n        this.limit.load(data.limit);\r\n        if (data.value !== undefined) {\r\n            this.value = data.value;\r\n        }\r\n    }\r\n}\r\n", "import { OptionsColor } from \"../OptionsColor.js\";\r\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\r\nexport class Shadow {\r\n    constructor() {\r\n        this.blur = 0;\r\n        this.color = new OptionsColor();\r\n        this.enable = false;\r\n        this.offset = {\r\n            x: 0,\r\n            y: 0,\r\n        };\r\n        this.color.value = \"#000\";\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.blur !== undefined) {\r\n            this.blur = data.blur;\r\n        }\r\n        this.color = OptionsColor.create(this.color, data.color);\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.offset === undefined) {\r\n            return;\r\n        }\r\n        if (data.offset.x !== undefined) {\r\n            this.offset.x = data.offset.x;\r\n        }\r\n        if (data.offset.y !== undefined) {\r\n            this.offset.y = data.offset.y;\r\n        }\r\n    }\r\n}\r\n", "import { deepExtend } from \"../../../../Utils/Utils.js\";\r\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nexport class Shape {\r\n    constructor() {\r\n        this.close = true;\r\n        this.fill = true;\r\n        this.options = {};\r\n        this.type = \"circle\";\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        const options = data.options;\r\n        if (options !== undefined) {\r\n            for (const shape in options) {\r\n                const item = options[shape];\r\n                if (item) {\r\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\r\n                }\r\n            }\r\n        }\r\n        if (data.close !== undefined) {\r\n            this.close = data.close;\r\n        }\r\n        if (data.fill !== undefined) {\r\n            this.fill = data.fill;\r\n        }\r\n        if (data.type !== undefined) {\r\n            this.type = data.type;\r\n        }\r\n    }\r\n}\r\n", "import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\r\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\r\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nexport class SizeAnimation extends RangedAnimationOptions {\r\n    constructor() {\r\n        super();\r\n        this.destroy = DestroyType.none;\r\n        this.speed = 5;\r\n    }\r\n    load(data) {\r\n        super.load(data);\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.destroy !== undefined) {\r\n            this.destroy = data.destroy;\r\n        }\r\n    }\r\n}\r\n", "import { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\r\nimport { SizeAnimation } from \"./SizeAnimation.js\";\r\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nexport class Size extends RangedAnimationValueWithRandom {\r\n    constructor() {\r\n        super();\r\n        this.animation = new SizeAnimation();\r\n        this.value = 3;\r\n    }\r\n    load(data) {\r\n        super.load(data);\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        const animation = data.animation;\r\n        if (animation !== undefined) {\r\n            this.animation.load(animation);\r\n        }\r\n    }\r\n}\r\n", "import { AnimatableColor } from \"../AnimatableColor.js\";\r\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\r\nimport { setRangeValue } from \"../../../Utils/NumberUtils.js\";\r\nexport class Stroke {\r\n    constructor() {\r\n        this.width = 0;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.color !== undefined) {\r\n            this.color = AnimatableColor.create(this.color, data.color);\r\n        }\r\n        if (data.width !== undefined) {\r\n            this.width = setRangeValue(data.width);\r\n        }\r\n        if (data.opacity !== undefined) {\r\n            this.opacity = setRangeValue(data.opacity);\r\n        }\r\n    }\r\n}\r\n", "import { ValueWithRandom } from \"../../ValueWithRandom.js\";\r\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\r\nexport class ZIndex extends ValueWithRandom {\r\n    constructor() {\r\n        super();\r\n        this.opacityRate = 1;\r\n        this.sizeRate = 1;\r\n        this.velocityRate = 1;\r\n    }\r\n    load(data) {\r\n        super.load(data);\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.opacityRate !== undefined) {\r\n            this.opacityRate = data.opacityRate;\r\n        }\r\n        if (data.sizeRate !== undefined) {\r\n            this.sizeRate = data.sizeRate;\r\n        }\r\n        if (data.velocityRate !== undefined) {\r\n            this.velocityRate = data.velocityRate;\r\n        }\r\n    }\r\n}\r\n", "import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils.js\";\r\nimport { AnimatableColor } from \"../AnimatableColor.js\";\r\nimport { Collisions } from \"./Collisions/Collisions.js\";\r\nimport { Effect } from \"./Effect/Effect.js\";\r\nimport { Move } from \"./Move/Move.js\";\r\nimport { Opacity } from \"./Opacity/Opacity.js\";\r\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce.js\";\r\nimport { ParticlesNumber } from \"./Number/ParticlesNumber.js\";\r\nimport { Shadow } from \"./Shadow.js\";\r\nimport { Shape } from \"./Shape/Shape.js\";\r\nimport { Size } from \"./Size/Size.js\";\r\nimport { Stroke } from \"./Stroke.js\";\r\nimport { ZIndex } from \"./ZIndex/ZIndex.js\";\r\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\r\nexport class ParticlesOptions {\r\n    constructor(engine, container) {\r\n        this._engine = engine;\r\n        this._container = container;\r\n        this.bounce = new ParticlesBounce();\r\n        this.collisions = new Collisions();\r\n        this.color = new AnimatableColor();\r\n        this.color.value = \"#fff\";\r\n        this.effect = new Effect();\r\n        this.groups = {};\r\n        this.move = new Move();\r\n        this.number = new ParticlesNumber();\r\n        this.opacity = new Opacity();\r\n        this.reduceDuplicates = false;\r\n        this.shadow = new Shadow();\r\n        this.shape = new Shape();\r\n        this.size = new Size();\r\n        this.stroke = new Stroke();\r\n        this.zIndex = new ZIndex();\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.groups !== undefined) {\r\n            for (const group of Object.keys(data.groups)) {\r\n                if (!Object.hasOwn(data.groups, group)) {\r\n                    continue;\r\n                }\r\n                const item = data.groups[group];\r\n                if (item !== undefined) {\r\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\r\n                }\r\n            }\r\n        }\r\n        if (data.reduceDuplicates !== undefined) {\r\n            this.reduceDuplicates = data.reduceDuplicates;\r\n        }\r\n        this.bounce.load(data.bounce);\r\n        this.color.load(AnimatableColor.create(this.color, data.color));\r\n        this.effect.load(data.effect);\r\n        this.move.load(data.move);\r\n        this.number.load(data.number);\r\n        this.opacity.load(data.opacity);\r\n        this.shape.load(data.shape);\r\n        this.size.load(data.size);\r\n        this.shadow.load(data.shadow);\r\n        this.zIndex.load(data.zIndex);\r\n        this.collisions.load(data.collisions);\r\n        if (data.interactivity !== undefined) {\r\n            this.interactivity = deepExtend({}, data.interactivity);\r\n        }\r\n        const strokeToLoad = data.stroke;\r\n        if (strokeToLoad) {\r\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, t => {\r\n                const tmp = new Stroke();\r\n                tmp.load(t);\r\n                return tmp;\r\n            });\r\n        }\r\n        if (this._container) {\r\n            const updaters = this._engine.updaters.get(this._container);\r\n            if (updaters) {\r\n                for (const updater of updaters) {\r\n                    if (updater.loadOptions) {\r\n                        updater.loadOptions(this, data);\r\n                    }\r\n                }\r\n            }\r\n            const interactors = this._engine.interactors.get(this._container);\r\n            if (interactors) {\r\n                for (const interactor of interactors) {\r\n                    if (interactor.loadParticlesOptions) {\r\n                        interactor.loadParticlesOptions(this, data);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n", "import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions.js\";\r\nexport function loadOptions(options, ...sourceOptionsArr) {\r\n    for (const sourceOptions of sourceOptionsArr) {\r\n        options.load(sourceOptions);\r\n    }\r\n}\r\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\r\n    const options = new ParticlesOptions(engine, container);\r\n    loadOptions(options, ...sourceOptionsArr);\r\n    return options;\r\n}\r\n", "import { deepExtend, executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\r\nimport { isBoolean, isNull } from \"../../Utils/TypeUtils.js\";\r\nimport { Background } from \"./Background/Background.js\";\r\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask.js\";\r\nimport { FullScreen } from \"./FullScreen/FullScreen.js\";\r\nimport { Interactivity } from \"./Interactivity/Interactivity.js\";\r\nimport { ManualParticle } from \"./ManualParticle.js\";\r\nimport { Responsive } from \"./Responsive.js\";\r\nimport { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\r\nimport { Theme } from \"./Theme/Theme.js\";\r\nimport { ThemeMode } from \"../../Enums/Modes/ThemeMode.js\";\r\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils.js\";\r\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\r\nexport class Options {\r\n    constructor(engine, container) {\r\n        this._findDefaultTheme = mode => {\r\n            return (this.themes.find(theme => theme.default.value && theme.default.mode === mode) ??\r\n                this.themes.find(theme => theme.default.value && theme.default.mode === ThemeMode.any));\r\n        };\r\n        this._importPreset = preset => {\r\n            this.load(this._engine.getPreset(preset));\r\n        };\r\n        this._engine = engine;\r\n        this._container = container;\r\n        this.autoPlay = true;\r\n        this.background = new Background();\r\n        this.backgroundMask = new BackgroundMask();\r\n        this.clear = true;\r\n        this.defaultThemes = {};\r\n        this.delay = 0;\r\n        this.fullScreen = new FullScreen();\r\n        this.detectRetina = true;\r\n        this.duration = 0;\r\n        this.fpsLimit = 120;\r\n        this.interactivity = new Interactivity(engine, container);\r\n        this.manualParticles = [];\r\n        this.particles = loadParticlesOptions(this._engine, this._container);\r\n        this.pauseOnBlur = true;\r\n        this.pauseOnOutsideViewport = true;\r\n        this.responsive = [];\r\n        this.smooth = false;\r\n        this.style = {};\r\n        this.themes = [];\r\n        this.zLayers = 100;\r\n    }\r\n    load(data) {\r\n        if (isNull(data)) {\r\n            return;\r\n        }\r\n        if (data.preset !== undefined) {\r\n            executeOnSingleOrMultiple(data.preset, preset => this._importPreset(preset));\r\n        }\r\n        if (data.autoPlay !== undefined) {\r\n            this.autoPlay = data.autoPlay;\r\n        }\r\n        if (data.clear !== undefined) {\r\n            this.clear = data.clear;\r\n        }\r\n        if (data.key !== undefined) {\r\n            this.key = data.key;\r\n        }\r\n        if (data.name !== undefined) {\r\n            this.name = data.name;\r\n        }\r\n        if (data.delay !== undefined) {\r\n            this.delay = setRangeValue(data.delay);\r\n        }\r\n        const detectRetina = data.detectRetina;\r\n        if (detectRetina !== undefined) {\r\n            this.detectRetina = detectRetina;\r\n        }\r\n        if (data.duration !== undefined) {\r\n            this.duration = setRangeValue(data.duration);\r\n        }\r\n        const fpsLimit = data.fpsLimit;\r\n        if (fpsLimit !== undefined) {\r\n            this.fpsLimit = fpsLimit;\r\n        }\r\n        if (data.pauseOnBlur !== undefined) {\r\n            this.pauseOnBlur = data.pauseOnBlur;\r\n        }\r\n        if (data.pauseOnOutsideViewport !== undefined) {\r\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\r\n        }\r\n        if (data.zLayers !== undefined) {\r\n            this.zLayers = data.zLayers;\r\n        }\r\n        this.background.load(data.background);\r\n        const fullScreen = data.fullScreen;\r\n        if (isBoolean(fullScreen)) {\r\n            this.fullScreen.enable = fullScreen;\r\n        }\r\n        else {\r\n            this.fullScreen.load(fullScreen);\r\n        }\r\n        this.backgroundMask.load(data.backgroundMask);\r\n        this.interactivity.load(data.interactivity);\r\n        if (data.manualParticles) {\r\n            this.manualParticles = data.manualParticles.map(t => {\r\n                const tmp = new ManualParticle();\r\n                tmp.load(t);\r\n                return tmp;\r\n            });\r\n        }\r\n        this.particles.load(data.particles);\r\n        this.style = deepExtend(this.style, data.style);\r\n        this._engine.loadOptions(this, data);\r\n        if (data.smooth !== undefined) {\r\n            this.smooth = data.smooth;\r\n        }\r\n        const interactors = this._engine.interactors.get(this._container);\r\n        if (interactors) {\r\n            for (const interactor of interactors) {\r\n                if (interactor.loadOptions) {\r\n                    interactor.loadOptions(this, data);\r\n                }\r\n            }\r\n        }\r\n        if (data.responsive !== undefined) {\r\n            for (const responsive of data.responsive) {\r\n                const optResponsive = new Responsive();\r\n                optResponsive.load(responsive);\r\n                this.responsive.push(optResponsive);\r\n            }\r\n        }\r\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\r\n        if (data.themes !== undefined) {\r\n            for (const theme of data.themes) {\r\n                const existingTheme = this.themes.find(t => t.name === theme.name);\r\n                if (!existingTheme) {\r\n                    const optTheme = new Theme();\r\n                    optTheme.load(theme);\r\n                    this.themes.push(optTheme);\r\n                }\r\n                else {\r\n                    existingTheme.load(theme);\r\n                }\r\n            }\r\n        }\r\n        this.defaultThemes.dark = this._findDefaultTheme(ThemeMode.dark)?.name;\r\n        this.defaultThemes.light = this._findDefaultTheme(ThemeMode.light)?.name;\r\n    }\r\n    setResponsive(width, pxRatio, defaultOptions) {\r\n        this.load(defaultOptions);\r\n        const responsiveOptions = this.responsive.find(t => t.mode === ResponsiveMode.screen && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\r\n        this.load(responsiveOptions?.options);\r\n        return responsiveOptions?.maxWidth;\r\n    }\r\n    setTheme(name) {\r\n        if (name) {\r\n            const chosenTheme = this.themes.find(theme => theme.name === name);\r\n            if (chosenTheme) {\r\n                this.load(chosenTheme.options);\r\n            }\r\n        }\r\n        else {\r\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch?.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? ThemeMode.dark : ThemeMode.light);\r\n            if (defaultTheme) {\r\n                this.load(defaultTheme.options);\r\n            }\r\n        }\r\n    }\r\n}\r\n", "export var InteractorType;\r\n(function (InteractorType) {\r\n    InteractorType[\"external\"] = \"external\";\r\n    InteractorType[\"particles\"] = \"particles\";\r\n})(InteractorType || (InteractorType = {}));\r\n", "import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\r\nexport class InteractionManager {\r\n    constructor(engine, container) {\r\n        this.container = container;\r\n        this._engine = engine;\r\n        this._interactors = [];\r\n        this._externalInteractors = [];\r\n        this._particleInteractors = [];\r\n    }\r\n    externalInteract(delta) {\r\n        for (const interactor of this._externalInteractors) {\r\n            if (interactor.isEnabled()) {\r\n                interactor.interact(delta);\r\n            }\r\n        }\r\n    }\r\n    handleClickMode(mode) {\r\n        for (const interactor of this._externalInteractors) {\r\n            interactor.handleClickMode?.(mode);\r\n        }\r\n    }\r\n    async init() {\r\n        this._interactors = await this._engine.getInteractors(this.container, true);\r\n        this._externalInteractors = [];\r\n        this._particleInteractors = [];\r\n        for (const interactor of this._interactors) {\r\n            switch (interactor.type) {\r\n                case InteractorType.external:\r\n                    this._externalInteractors.push(interactor);\r\n                    break;\r\n                case InteractorType.particles:\r\n                    this._particleInteractors.push(interactor);\r\n                    break;\r\n            }\r\n            interactor.init();\r\n        }\r\n    }\r\n    particlesInteract(particle, delta) {\r\n        for (const interactor of this._externalInteractors) {\r\n            interactor.clear(particle, delta);\r\n        }\r\n        for (const interactor of this._particleInteractors) {\r\n            if (interactor.isEnabled(particle)) {\r\n                interactor.interact(particle, delta);\r\n            }\r\n        }\r\n    }\r\n    reset(particle) {\r\n        for (const interactor of this._externalInteractors) {\r\n            if (interactor.isEnabled()) {\r\n                interactor.reset(particle);\r\n            }\r\n        }\r\n        for (const interactor of this._particleInteractors) {\r\n            if (interactor.isEnabled(particle)) {\r\n                interactor.reset(particle);\r\n            }\r\n        }\r\n    }\r\n}\r\n", "export var ParticleOutType;\r\n(function (ParticleOutType) {\r\n    ParticleOutType[\"normal\"] = \"normal\";\r\n    ParticleOutType[\"inside\"] = \"inside\";\r\n    ParticleOutType[\"outside\"] = \"outside\";\r\n})(ParticleOutType || (ParticleOutType = {}));\r\n", "import { Vector, Vector3d } from \"./Utils/Vectors.js\";\r\nimport { calcExactPositionOrRandomFromSize, clamp, degToRad, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils.js\";\r\nimport { decayOffset, defaultRadius, defaultRetryCount, double, errorPrefix, half, millisecondsToSeconds, minRetries, minZ, none, randomColorValue, rollFactor, squareExp, tryCountIncrement, } from \"./Utils/Constants.js\";\r\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils.js\";\r\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\r\nimport { EventType } from \"../Enums/Types/EventType.js\";\r\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity.js\";\r\nimport { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\r\nimport { OutMode } from \"../Enums/Modes/OutMode.js\";\r\nimport { ParticleOutType } from \"../Enums/Types/ParticleOutType.js\";\r\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\r\nimport { alterHsl } from \"../Utils/CanvasUtils.js\";\r\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils.js\";\r\nfunction loadEffectData(effect, effectOptions, id, reduceDuplicates) {\r\n    const effectData = effectOptions.options[effect];\r\n    if (!effectData) {\r\n        return;\r\n    }\r\n    return deepExtend({\r\n        close: effectOptions.close,\r\n        fill: effectOptions.fill,\r\n    }, itemFromSingleOrMultiple(effectData, id, reduceDuplicates));\r\n}\r\nfunction loadShapeData(shape, shapeOptions, id, reduceDuplicates) {\r\n    const shapeData = shapeOptions.options[shape];\r\n    if (!shapeData) {\r\n        return;\r\n    }\r\n    return deepExtend({\r\n        close: shapeOptions.close,\r\n        fill: shapeOptions.fill,\r\n    }, itemFromSingleOrMultiple(shapeData, id, reduceDuplicates));\r\n}\r\nfunction fixOutMode(data) {\r\n    if (!isInArray(data.outMode, data.checkModes)) {\r\n        return;\r\n    }\r\n    const diameter = data.radius * double;\r\n    if (data.coord > data.maxCoord - diameter) {\r\n        data.setCb(-data.radius);\r\n    }\r\n    else if (data.coord < diameter) {\r\n        data.setCb(data.radius);\r\n    }\r\n}\r\nexport class Particle {\r\n    constructor(engine, container) {\r\n        this.container = container;\r\n        this._calcPosition = (container, position, zIndex, tryCount = defaultRetryCount) => {\r\n            for (const plugin of container.plugins.values()) {\r\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\r\n                if (pluginPos) {\r\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\r\n                }\r\n            }\r\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\r\n                size: canvasSize,\r\n                position: position,\r\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\r\n                fixOutMode({\r\n                    outMode,\r\n                    checkModes: [OutMode.bounce],\r\n                    coord: pos.x,\r\n                    maxCoord: container.canvas.size.width,\r\n                    setCb: (value) => (pos.x += value),\r\n                    radius,\r\n                });\r\n            }, fixVertical = (outMode) => {\r\n                fixOutMode({\r\n                    outMode,\r\n                    checkModes: [OutMode.bounce],\r\n                    coord: pos.y,\r\n                    maxCoord: container.canvas.size.height,\r\n                    setCb: (value) => (pos.y += value),\r\n                    radius,\r\n                });\r\n            };\r\n            fixHorizontal(outModes.left ?? outModes.default);\r\n            fixHorizontal(outModes.right ?? outModes.default);\r\n            fixVertical(outModes.top ?? outModes.default);\r\n            fixVertical(outModes.bottom ?? outModes.default);\r\n            if (this._checkOverlap(pos, tryCount)) {\r\n                return this._calcPosition(container, undefined, zIndex, tryCount + tryCountIncrement);\r\n            }\r\n            return pos;\r\n        };\r\n        this._calculateVelocity = () => {\r\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\r\n            if (moveOptions.direction === MoveDirection.inside || moveOptions.direction === MoveDirection.outside) {\r\n                return res;\r\n            }\r\n            const rad = degToRad(getRangeValue(moveOptions.angle.value)), radOffset = degToRad(getRangeValue(moveOptions.angle.offset)), range = {\r\n                left: radOffset - rad * half,\r\n                right: radOffset + rad * half,\r\n            };\r\n            if (!moveOptions.straight) {\r\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\r\n            }\r\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\r\n                res.length *= getRandom();\r\n            }\r\n            return res;\r\n        };\r\n        this._checkOverlap = (pos, tryCount = defaultRetryCount) => {\r\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\r\n            if (!collisionsOptions.enable) {\r\n                return false;\r\n            }\r\n            const overlapOptions = collisionsOptions.overlap;\r\n            if (overlapOptions.enable) {\r\n                return false;\r\n            }\r\n            const retries = overlapOptions.retries;\r\n            if (retries >= minRetries && tryCount > retries) {\r\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\r\n            }\r\n            return !!this.container.particles.find(particle => getDistance(pos, particle.position) < radius + particle.getRadius());\r\n        };\r\n        this._getRollColor = color => {\r\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\r\n                return color;\r\n            }\r\n            const backFactor = this.roll.horizontal && this.roll.vertical ? double * rollFactor : rollFactor, backSum = this.roll.horizontal ? Math.PI * half : none, rolled = Math.floor(((this.roll.angle ?? none) + backSum) / (Math.PI / backFactor)) % double;\r\n            if (!rolled) {\r\n                return color;\r\n            }\r\n            if (this.backColor) {\r\n                return this.backColor;\r\n            }\r\n            if (this.roll.alter) {\r\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\r\n            }\r\n            return color;\r\n        };\r\n        this._initPosition = position => {\r\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\r\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, minZ, container.zLayers));\r\n            this.initialPosition = this.position.copy();\r\n            const canvasSize = container.canvas.size;\r\n            this.moveCenter = {\r\n                ...getPosition(this.options.move.center, canvasSize),\r\n                radius: this.options.move.center.radius ?? defaultRadius,\r\n                mode: this.options.move.center.mode ?? PixelMode.percent,\r\n            };\r\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\r\n            switch (this.options.move.direction) {\r\n                case MoveDirection.inside:\r\n                    this.outType = ParticleOutType.inside;\r\n                    break;\r\n                case MoveDirection.outside:\r\n                    this.outType = ParticleOutType.outside;\r\n                    break;\r\n            }\r\n            this.offset = Vector.origin;\r\n        };\r\n        this._engine = engine;\r\n    }\r\n    destroy(override) {\r\n        if (this.unbreakable || this.destroyed) {\r\n            return;\r\n        }\r\n        this.destroyed = true;\r\n        this.bubble.inRange = false;\r\n        this.slow.inRange = false;\r\n        const container = this.container, pathGenerator = this.pathGenerator, shapeDrawer = container.shapeDrawers.get(this.shape);\r\n        shapeDrawer?.particleDestroy?.(this);\r\n        for (const plugin of container.plugins.values()) {\r\n            plugin.particleDestroyed?.(this, override);\r\n        }\r\n        for (const updater of container.particles.updaters) {\r\n            updater.particleDestroyed?.(this, override);\r\n        }\r\n        pathGenerator?.reset(this);\r\n        this._engine.dispatchEvent(EventType.particleDestroyed, {\r\n            container: this.container,\r\n            data: {\r\n                particle: this,\r\n            },\r\n        });\r\n    }\r\n    draw(delta) {\r\n        const container = this.container, canvas = container.canvas;\r\n        for (const plugin of container.plugins.values()) {\r\n            canvas.drawParticlePlugin(plugin, this, delta);\r\n        }\r\n        canvas.drawParticle(this, delta);\r\n    }\r\n    getFillColor() {\r\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\r\n    }\r\n    getMass() {\r\n        return this.getRadius() ** squareExp * Math.PI * half;\r\n    }\r\n    getPosition() {\r\n        return {\r\n            x: this.position.x + this.offset.x,\r\n            y: this.position.y + this.offset.y,\r\n            z: this.position.z,\r\n        };\r\n    }\r\n    getRadius() {\r\n        return this.bubble.radius ?? this.size.value;\r\n    }\r\n    getStrokeColor() {\r\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\r\n    }\r\n    init(id, position, overrideOptions, group) {\r\n        const container = this.container, engine = this._engine;\r\n        this.id = id;\r\n        this.group = group;\r\n        this.effectClose = true;\r\n        this.effectFill = true;\r\n        this.shapeClose = true;\r\n        this.shapeFill = true;\r\n        this.pathRotation = false;\r\n        this.lastPathTime = 0;\r\n        this.destroyed = false;\r\n        this.unbreakable = false;\r\n        this.isRotating = false;\r\n        this.rotation = 0;\r\n        this.misplaced = false;\r\n        this.retina = {\r\n            maxDistance: {},\r\n        };\r\n        this.outType = ParticleOutType.normal;\r\n        this.ignoresResizeRatio = true;\r\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), { reduceDuplicates } = particlesOptions, effectType = particlesOptions.effect.type, shapeType = particlesOptions.shape.type;\r\n        this.effect = itemFromSingleOrMultiple(effectType, this.id, reduceDuplicates);\r\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\r\n        const effectOptions = particlesOptions.effect, shapeOptions = particlesOptions.shape;\r\n        if (overrideOptions) {\r\n            if (overrideOptions.effect?.type) {\r\n                const overrideEffectType = overrideOptions.effect.type, effect = itemFromSingleOrMultiple(overrideEffectType, this.id, reduceDuplicates);\r\n                if (effect) {\r\n                    this.effect = effect;\r\n                    effectOptions.load(overrideOptions.effect);\r\n                }\r\n            }\r\n            if (overrideOptions.shape?.type) {\r\n                const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\r\n                if (shape) {\r\n                    this.shape = shape;\r\n                    shapeOptions.load(overrideOptions.shape);\r\n                }\r\n            }\r\n        }\r\n        if (this.effect === randomColorValue) {\r\n            const availableEffects = [...this.container.effectDrawers.keys()];\r\n            this.effect = availableEffects[Math.floor(Math.random() * availableEffects.length)];\r\n        }\r\n        if (this.shape === randomColorValue) {\r\n            const availableShapes = [...this.container.shapeDrawers.keys()];\r\n            this.shape = availableShapes[Math.floor(Math.random() * availableShapes.length)];\r\n        }\r\n        this.effectData = loadEffectData(this.effect, effectOptions, this.id, reduceDuplicates);\r\n        this.shapeData = loadShapeData(this.shape, shapeOptions, this.id, reduceDuplicates);\r\n        particlesOptions.load(overrideOptions);\r\n        const effectData = this.effectData;\r\n        if (effectData) {\r\n            particlesOptions.load(effectData.particles);\r\n        }\r\n        const shapeData = this.shapeData;\r\n        if (shapeData) {\r\n            particlesOptions.load(shapeData.particles);\r\n        }\r\n        const interactivity = new Interactivity(engine, container);\r\n        interactivity.load(container.actualOptions.interactivity);\r\n        interactivity.load(particlesOptions.interactivity);\r\n        this.interactivity = interactivity;\r\n        this.effectFill = effectData?.fill ?? particlesOptions.effect.fill;\r\n        this.effectClose = effectData?.close ?? particlesOptions.effect.close;\r\n        this.shapeFill = shapeData?.fill ?? particlesOptions.shape.fill;\r\n        this.shapeClose = shapeData?.close ?? particlesOptions.shape.close;\r\n        this.options = particlesOptions;\r\n        const pathOptions = this.options.move.path;\r\n        this.pathDelay = getRangeValue(pathOptions.delay.value) * millisecondsToSeconds;\r\n        if (pathOptions.generator) {\r\n            this.pathGenerator = this._engine.getPathGenerator(pathOptions.generator);\r\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\r\n                this.pathGenerator.init(container);\r\n            }\r\n        }\r\n        container.retina.initParticle(this);\r\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\r\n        this.bubble = {\r\n            inRange: false,\r\n        };\r\n        this.slow = {\r\n            inRange: false,\r\n            factor: 1,\r\n        };\r\n        this._initPosition(position);\r\n        this.initialVelocity = this._calculateVelocity();\r\n        this.velocity = this.initialVelocity.copy();\r\n        this.moveDecay = decayOffset - getRangeValue(this.options.move.decay);\r\n        const particles = container.particles;\r\n        particles.setLastZIndex(this.position.z);\r\n        this.zIndexFactor = this.position.z / container.zLayers;\r\n        this.sides = 24;\r\n        let effectDrawer = container.effectDrawers.get(this.effect);\r\n        if (!effectDrawer) {\r\n            effectDrawer = this._engine.getEffectDrawer(this.effect);\r\n            if (effectDrawer) {\r\n                container.effectDrawers.set(this.effect, effectDrawer);\r\n            }\r\n        }\r\n        if (effectDrawer?.loadEffect) {\r\n            effectDrawer.loadEffect(this);\r\n        }\r\n        let shapeDrawer = container.shapeDrawers.get(this.shape);\r\n        if (!shapeDrawer) {\r\n            shapeDrawer = this._engine.getShapeDrawer(this.shape);\r\n            if (shapeDrawer) {\r\n                container.shapeDrawers.set(this.shape, shapeDrawer);\r\n            }\r\n        }\r\n        if (shapeDrawer?.loadShape) {\r\n            shapeDrawer.loadShape(this);\r\n        }\r\n        const sideCountFunc = shapeDrawer?.getSidesCount;\r\n        if (sideCountFunc) {\r\n            this.sides = sideCountFunc(this);\r\n        }\r\n        this.spawning = false;\r\n        this.shadowColor = rangeColorToRgb(this._engine, this.options.shadow.color);\r\n        for (const updater of particles.updaters) {\r\n            updater.init(this);\r\n        }\r\n        for (const mover of particles.movers) {\r\n            mover.init?.(this);\r\n        }\r\n        effectDrawer?.particleInit?.(container, this);\r\n        shapeDrawer?.particleInit?.(container, this);\r\n        for (const plugin of container.plugins.values()) {\r\n            plugin.particleCreated?.(this);\r\n        }\r\n    }\r\n    isInsideCanvas() {\r\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\r\n        return (position.x >= -radius &&\r\n            position.y >= -radius &&\r\n            position.y <= canvasSize.height + radius &&\r\n            position.x <= canvasSize.width + radius);\r\n    }\r\n    isVisible() {\r\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\r\n    }\r\n    reset() {\r\n        for (const updater of this.container.particles.updaters) {\r\n            updater.reset?.(this);\r\n        }\r\n    }\r\n}\r\n", "export class Point {\r\n    constructor(position, particle) {\r\n        this.position = position;\r\n        this.particle = particle;\r\n    }\r\n}\r\n", "export var RangeType;\r\n(function (RangeType) {\r\n    RangeType[\"circle\"] = \"circle\";\r\n    RangeType[\"rectangle\"] = \"rectangle\";\r\n})(RangeType || (RangeType = {}));\r\n", "import { RangeType } from \"../../Types/RangeType.js\";\r\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\r\nimport { squareExp } from \"./Constants.js\";\r\nexport class BaseRange {\r\n    constructor(x, y, type) {\r\n        this.position = {\r\n            x: x,\r\n            y: y,\r\n        };\r\n        this.type = type;\r\n    }\r\n}\r\nexport class Circle extends BaseRange {\r\n    constructor(x, y, radius) {\r\n        super(x, y, RangeType.circle);\r\n        this.radius = radius;\r\n    }\r\n    contains(point) {\r\n        return getDistance(point, this.position) <= this.radius;\r\n    }\r\n    intersects(range) {\r\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\r\n        if (range instanceof Circle || range.type === RangeType.circle) {\r\n            const circleRange = range, rSum = r + circleRange.radius, dist = Math.sqrt(distPos.x ** squareExp + distPos.y ** squareExp);\r\n            return rSum > dist;\r\n        }\r\n        else if (range instanceof Rectangle || range.type === RangeType.rectangle) {\r\n            const rectRange = range, { width, height } = rectRange.size, edges = Math.pow(distPos.x - width, squareExp) + Math.pow(distPos.y - height, squareExp);\r\n            return (edges <= r ** squareExp ||\r\n                (distPos.x <= r + width && distPos.y <= r + height) ||\r\n                distPos.x <= width ||\r\n                distPos.y <= height);\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexport class Rectangle extends BaseRange {\r\n    constructor(x, y, width, height) {\r\n        super(x, y, RangeType.rectangle);\r\n        this.size = {\r\n            height: height,\r\n            width: width,\r\n        };\r\n    }\r\n    contains(point) {\r\n        const w = this.size.width, h = this.size.height, pos = this.position;\r\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\r\n    }\r\n    intersects(range) {\r\n        if (range instanceof Circle) {\r\n            return range.intersects(this);\r\n        }\r\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\r\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\r\n    }\r\n}\r\n", "import { Circle, Rectangle } from \"./Ranges.js\";\r\nimport { double, half, subdivideCount } from \"./Constants.js\";\r\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\r\nexport class QuadTree {\r\n    constructor(rectangle, capacity) {\r\n        this.rectangle = rectangle;\r\n        this.capacity = capacity;\r\n        this._subdivide = () => {\r\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\r\n            for (let i = 0; i < subdivideCount; i++) {\r\n                const fixedIndex = i % double;\r\n                this._subs.push(new QuadTree(new Rectangle(x + width * half * fixedIndex, y + height * half * (Math.round(i * half) - fixedIndex), width * half, height * half), capacity));\r\n            }\r\n            this._divided = true;\r\n        };\r\n        this._points = [];\r\n        this._divided = false;\r\n        this._subs = [];\r\n    }\r\n    insert(point) {\r\n        if (!this.rectangle.contains(point.position)) {\r\n            return false;\r\n        }\r\n        if (this._points.length < this.capacity) {\r\n            this._points.push(point);\r\n            return true;\r\n        }\r\n        if (!this._divided) {\r\n            this._subdivide();\r\n        }\r\n        return this._subs.some(sub => sub.insert(point));\r\n    }\r\n    query(range, check) {\r\n        const res = [];\r\n        if (!range.intersects(this.rectangle)) {\r\n            return [];\r\n        }\r\n        for (const p of this._points) {\r\n            if (!range.contains(p.position) &&\r\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\r\n                (!check || check(p.particle))) {\r\n                continue;\r\n            }\r\n            res.push(p.particle);\r\n        }\r\n        if (this._divided) {\r\n            for (const sub of this._subs) {\r\n                res.push(...sub.query(range, check));\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    queryCircle(position, radius, check) {\r\n        return this.query(new Circle(position.x, position.y, radius), check);\r\n    }\r\n    queryRectangle(position, size, check) {\r\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\r\n    }\r\n}\r\n", "import { countOffset, defaultDensityFactor, defaultRemoveQuantity, deleteCount, errorPrefix, lengthOffset, manualCount, minCount, minIndex, minLimit, posOffset, qTreeCapacity, sizeFactor, squareExp, } from \"./Utils/Constants.js\";\r\nimport { getLogger, getPosition } from \"../Utils/Utils.js\";\r\nimport { EventType } from \"../Enums/Types/EventType.js\";\r\nimport { InteractionManager } from \"./Utils/InteractionManager.js\";\r\nimport { LimitMode } from \"../Enums/Modes/LimitMode.js\";\r\nimport { Particle } from \"./Particle.js\";\r\nimport { Point } from \"./Utils/Point.js\";\r\nimport { QuadTree } from \"./Utils/QuadTree.js\";\r\nimport { Rectangle } from \"./Utils/Ranges.js\";\r\nconst qTreeRectangle = (canvasSize) => {\r\n    const { height, width } = canvasSize;\r\n    return new Rectangle(posOffset * width, posOffset * height, sizeFactor * width, sizeFactor * height);\r\n};\r\nexport class Particles {\r\n    constructor(engine, container) {\r\n        this._addToPool = (...particles) => {\r\n            this._pool.push(...particles);\r\n        };\r\n        this._applyDensity = (options, manualCount, group) => {\r\n            const numberOptions = options.number;\r\n            if (!options.number.density?.enable) {\r\n                if (group === undefined) {\r\n                    this._limit = numberOptions.limit.value;\r\n                }\r\n                else if (numberOptions.limit) {\r\n                    this._groupLimits.set(group, numberOptions.limit.value);\r\n                }\r\n                return;\r\n            }\r\n            const densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit.value > minLimit ? numberOptions.limit.value : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter(t => t.group === group).length);\r\n            if (group === undefined) {\r\n                this._limit = numberOptions.limit.value * densityFactor;\r\n            }\r\n            else {\r\n                this._groupLimits.set(group, numberOptions.limit.value * densityFactor);\r\n            }\r\n            if (particlesCount < particlesNumber) {\r\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\r\n            }\r\n            else if (particlesCount > particlesNumber) {\r\n                this.removeQuantity(particlesCount - particlesNumber, group);\r\n            }\r\n        };\r\n        this._initDensityFactor = densityOptions => {\r\n            const container = this._container;\r\n            if (!container.canvas.element || !densityOptions.enable) {\r\n                return defaultDensityFactor;\r\n            }\r\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\r\n            return (canvas.width * canvas.height) / (densityOptions.height * densityOptions.width * pxRatio ** squareExp);\r\n        };\r\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\r\n            try {\r\n                let particle = this._pool.pop();\r\n                if (!particle) {\r\n                    particle = new Particle(this._engine, this._container);\r\n                }\r\n                particle.init(this._nextId, position, overrideOptions, group);\r\n                let canAdd = true;\r\n                if (initializer) {\r\n                    canAdd = initializer(particle);\r\n                }\r\n                if (!canAdd) {\r\n                    return;\r\n                }\r\n                this._array.push(particle);\r\n                this._zArray.push(particle);\r\n                this._nextId++;\r\n                this._engine.dispatchEvent(EventType.particleAdded, {\r\n                    container: this._container,\r\n                    data: {\r\n                        particle,\r\n                    },\r\n                });\r\n                return particle;\r\n            }\r\n            catch (e) {\r\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\r\n            }\r\n        };\r\n        this._removeParticle = (index, group, override) => {\r\n            const particle = this._array[index];\r\n            if (!particle || particle.group !== group) {\r\n                return false;\r\n            }\r\n            const zIdx = this._zArray.indexOf(particle);\r\n            this._array.splice(index, deleteCount);\r\n            this._zArray.splice(zIdx, deleteCount);\r\n            particle.destroy(override);\r\n            this._engine.dispatchEvent(EventType.particleRemoved, {\r\n                container: this._container,\r\n                data: {\r\n                    particle,\r\n                },\r\n            });\r\n            this._addToPool(particle);\r\n            return true;\r\n        };\r\n        this._engine = engine;\r\n        this._container = container;\r\n        this._nextId = 0;\r\n        this._array = [];\r\n        this._zArray = [];\r\n        this._pool = [];\r\n        this._limit = 0;\r\n        this._groupLimits = new Map();\r\n        this._needsSort = false;\r\n        this._lastZIndex = 0;\r\n        this._interactionManager = new InteractionManager(engine, container);\r\n        this._pluginsInitialized = false;\r\n        const canvasSize = container.canvas.size;\r\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\r\n        this.movers = [];\r\n        this.updaters = [];\r\n    }\r\n    get count() {\r\n        return this._array.length;\r\n    }\r\n    addManualParticles() {\r\n        const container = this._container, options = container.actualOptions;\r\n        options.manualParticles.forEach(p => this.addParticle(p.position ? getPosition(p.position, container.canvas.size) : undefined, p.options));\r\n    }\r\n    addParticle(position, overrideOptions, group, initializer) {\r\n        const limitMode = this._container.actualOptions.particles.number.limit.mode, limit = group === undefined ? this._limit : (this._groupLimits.get(group) ?? this._limit), currentCount = this.count;\r\n        if (limit > minLimit) {\r\n            switch (limitMode) {\r\n                case LimitMode.delete: {\r\n                    const countToRemove = currentCount + countOffset - limit;\r\n                    if (countToRemove > minCount) {\r\n                        this.removeQuantity(countToRemove);\r\n                    }\r\n                    break;\r\n                }\r\n                case LimitMode.wait:\r\n                    if (currentCount >= limit) {\r\n                        return;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        return this._pushParticle(position, overrideOptions, group, initializer);\r\n    }\r\n    clear() {\r\n        this._array = [];\r\n        this._zArray = [];\r\n        this._pluginsInitialized = false;\r\n    }\r\n    destroy() {\r\n        this._array = [];\r\n        this._zArray = [];\r\n        this.movers = [];\r\n        this.updaters = [];\r\n    }\r\n    draw(delta) {\r\n        const container = this._container, canvas = container.canvas;\r\n        canvas.clear();\r\n        this.update(delta);\r\n        for (const plugin of container.plugins.values()) {\r\n            canvas.drawPlugin(plugin, delta);\r\n        }\r\n        for (const p of this._zArray) {\r\n            p.draw(delta);\r\n        }\r\n    }\r\n    filter(condition) {\r\n        return this._array.filter(condition);\r\n    }\r\n    find(condition) {\r\n        return this._array.find(condition);\r\n    }\r\n    get(index) {\r\n        return this._array[index];\r\n    }\r\n    handleClickMode(mode) {\r\n        this._interactionManager.handleClickMode(mode);\r\n    }\r\n    async init() {\r\n        const container = this._container, options = container.actualOptions;\r\n        this._lastZIndex = 0;\r\n        this._needsSort = false;\r\n        await this.initPlugins();\r\n        let handled = false;\r\n        for (const plugin of container.plugins.values()) {\r\n            handled = plugin.particlesInitialization?.() ?? handled;\r\n            if (handled) {\r\n                break;\r\n            }\r\n        }\r\n        this.addManualParticles();\r\n        if (!handled) {\r\n            const particlesOptions = options.particles, groups = particlesOptions.groups;\r\n            for (const group in groups) {\r\n                const groupOptions = groups[group];\r\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < particlesOptions.number.value; i++, j++) {\r\n                    this.addParticle(undefined, groupOptions, group);\r\n                }\r\n            }\r\n            for (let i = this.count; i < particlesOptions.number.value; i++) {\r\n                this.addParticle();\r\n            }\r\n        }\r\n    }\r\n    async initPlugins() {\r\n        if (this._pluginsInitialized) {\r\n            return;\r\n        }\r\n        const container = this._container;\r\n        this.movers = await this._engine.getMovers(container, true);\r\n        this.updaters = await this._engine.getUpdaters(container, true);\r\n        await this._interactionManager.init();\r\n        for (const pathGenerator of container.pathGenerators.values()) {\r\n            pathGenerator.init(container);\r\n        }\r\n    }\r\n    push(nb, mouse, overrideOptions, group) {\r\n        for (let i = 0; i < nb; i++) {\r\n            this.addParticle(mouse?.position, overrideOptions, group);\r\n        }\r\n    }\r\n    async redraw() {\r\n        this.clear();\r\n        await this.init();\r\n        this.draw({ value: 0, factor: 0 });\r\n    }\r\n    remove(particle, group, override) {\r\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\r\n    }\r\n    removeAt(index, quantity = defaultRemoveQuantity, group, override) {\r\n        if (index < minIndex || index > this.count) {\r\n            return;\r\n        }\r\n        let deleted = 0;\r\n        for (let i = index; deleted < quantity && i < this.count; i++) {\r\n            if (this._removeParticle(i, group, override)) {\r\n                i--;\r\n                deleted++;\r\n            }\r\n        }\r\n    }\r\n    removeQuantity(quantity, group) {\r\n        this.removeAt(minIndex, quantity, group);\r\n    }\r\n    setDensity() {\r\n        const options = this._container.actualOptions, groups = options.particles.groups;\r\n        for (const group in groups) {\r\n            this._applyDensity(groups[group], manualCount, group);\r\n        }\r\n        this._applyDensity(options.particles, options.manualParticles.length);\r\n    }\r\n    setLastZIndex(zIndex) {\r\n        this._lastZIndex = zIndex;\r\n        this._needsSort = this._needsSort || this._lastZIndex < zIndex;\r\n    }\r\n    setResizeFactor(factor) {\r\n        this._resizeFactor = factor;\r\n    }\r\n    update(delta) {\r\n        const container = this._container, particlesToDelete = new Set();\r\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\r\n        for (const pathGenerator of container.pathGenerators.values()) {\r\n            pathGenerator.update();\r\n        }\r\n        for (const plugin of container.plugins.values()) {\r\n            plugin.update?.(delta);\r\n        }\r\n        const resizeFactor = this._resizeFactor;\r\n        for (const particle of this._array) {\r\n            if (resizeFactor && !particle.ignoresResizeRatio) {\r\n                particle.position.x *= resizeFactor.width;\r\n                particle.position.y *= resizeFactor.height;\r\n                particle.initialPosition.x *= resizeFactor.width;\r\n                particle.initialPosition.y *= resizeFactor.height;\r\n            }\r\n            particle.ignoresResizeRatio = false;\r\n            this._interactionManager.reset(particle);\r\n            for (const plugin of this._container.plugins.values()) {\r\n                if (particle.destroyed) {\r\n                    break;\r\n                }\r\n                plugin.particleUpdate?.(particle, delta);\r\n            }\r\n            for (const mover of this.movers) {\r\n                if (mover.isEnabled(particle)) {\r\n                    mover.move(particle, delta);\r\n                }\r\n            }\r\n            if (particle.destroyed) {\r\n                particlesToDelete.add(particle);\r\n                continue;\r\n            }\r\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\r\n        }\r\n        if (particlesToDelete.size) {\r\n            const checkDelete = (p) => !particlesToDelete.has(p);\r\n            this._array = this.filter(checkDelete);\r\n            this._zArray = this._zArray.filter(checkDelete);\r\n            for (const particle of particlesToDelete) {\r\n                this._engine.dispatchEvent(EventType.particleRemoved, {\r\n                    container: this._container,\r\n                    data: {\r\n                        particle,\r\n                    },\r\n                });\r\n            }\r\n            this._addToPool(...particlesToDelete);\r\n        }\r\n        this._interactionManager.externalInteract(delta);\r\n        for (const particle of this._array) {\r\n            for (const updater of this.updaters) {\r\n                updater.update(particle, delta);\r\n            }\r\n            if (!particle.destroyed && !particle.spawning) {\r\n                this._interactionManager.particlesInteract(particle, delta);\r\n            }\r\n        }\r\n        delete this._resizeFactor;\r\n        if (this._needsSort) {\r\n            const zArray = this._zArray;\r\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\r\n            this._lastZIndex = zArray[zArray.length - lengthOffset].position.z;\r\n            this._needsSort = false;\r\n        }\r\n    }\r\n}\r\n", "import { defaultRatio, defaultReduceFactor } from \"./Utils/Constants.js\";\r\nimport { getRangeValue } from \"../Utils/NumberUtils.js\";\r\nimport { isSsr } from \"../Utils/Utils.js\";\r\nexport class Retina {\r\n    constructor(container) {\r\n        this.container = container;\r\n        this.pixelRatio = defaultRatio;\r\n        this.reduceFactor = defaultReduceFactor;\r\n    }\r\n    init() {\r\n        const container = this.container, options = container.actualOptions;\r\n        this.pixelRatio = !options.detectRetina || isSsr() ? defaultRatio : window.devicePixelRatio;\r\n        this.reduceFactor = defaultReduceFactor;\r\n        const ratio = this.pixelRatio, canvas = container.canvas;\r\n        if (canvas.element) {\r\n            const element = canvas.element;\r\n            canvas.size.width = element.offsetWidth * ratio;\r\n            canvas.size.height = element.offsetHeight * ratio;\r\n        }\r\n        const particles = options.particles, moveOptions = particles.move;\r\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\r\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\r\n    }\r\n    initParticle(particle) {\r\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\r\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\r\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\r\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\r\n        const maxDistance = props.maxDistance;\r\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\r\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\r\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\r\n    }\r\n}\r\n", "import { animate, cancelAnimation, getRangeValue } from \"../Utils/NumberUtils.js\";\r\nimport { clickRadius, defaultFps, defaultFpsLimit, errorPrefix, millisecondsToSeconds, minCoordinate, minFpsLimit, removeDeleteCount, removeMinIndex, touchEndLengthOffset, } from \"./Utils/Constants.js\";\r\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\r\nimport { Canvas } from \"./Canvas.js\";\r\nimport { EventListeners } from \"./Utils/EventListeners.js\";\r\nimport { EventType } from \"../Enums/Types/EventType.js\";\r\nimport { Options } from \"../Options/Classes/Options.js\";\r\nimport { Particles } from \"./Particles.js\";\r\nimport { Retina } from \"./Retina.js\";\r\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\r\nfunction guardCheck(container) {\r\n    return container && !container.destroyed;\r\n}\r\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\r\n    return {\r\n        value,\r\n        factor: smooth ? defaultFps / fpsLimit : (defaultFps * value) / millisecondsToSeconds,\r\n    };\r\n}\r\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\r\n    const options = new Options(engine, container);\r\n    loadOptions(options, ...sourceOptionsArr);\r\n    return options;\r\n}\r\nexport class Container {\r\n    constructor(engine, id, sourceOptions) {\r\n        this._intersectionManager = entries => {\r\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\r\n                return;\r\n            }\r\n            for (const entry of entries) {\r\n                if (entry.target !== this.interactivity.element) {\r\n                    continue;\r\n                }\r\n                if (entry.isIntersecting) {\r\n                    void this.play();\r\n                }\r\n                else {\r\n                    this.pause();\r\n                }\r\n            }\r\n        };\r\n        this._nextFrame = (timestamp) => {\r\n            try {\r\n                if (!this._smooth &&\r\n                    this._lastFrameTime !== undefined &&\r\n                    timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\r\n                    this.draw(false);\r\n                    return;\r\n                }\r\n                this._lastFrameTime ??= timestamp;\r\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\r\n                this.addLifeTime(delta.value);\r\n                this._lastFrameTime = timestamp;\r\n                if (delta.value > millisecondsToSeconds) {\r\n                    this.draw(false);\r\n                    return;\r\n                }\r\n                this.particles.draw(delta);\r\n                if (!this.alive()) {\r\n                    this.destroy();\r\n                    return;\r\n                }\r\n                if (this.animationStatus) {\r\n                    this.draw(false);\r\n                }\r\n            }\r\n            catch (e) {\r\n                getLogger().error(`${errorPrefix} in animation loop`, e);\r\n            }\r\n        };\r\n        this._engine = engine;\r\n        this.id = Symbol(id);\r\n        this.fpsLimit = 120;\r\n        this._smooth = false;\r\n        this._delay = 0;\r\n        this._duration = 0;\r\n        this._lifeTime = 0;\r\n        this._firstStart = true;\r\n        this.started = false;\r\n        this.destroyed = false;\r\n        this._paused = true;\r\n        this._lastFrameTime = 0;\r\n        this.zLayers = 100;\r\n        this.pageHidden = false;\r\n        this._clickHandlers = new Map();\r\n        this._sourceOptions = sourceOptions;\r\n        this._initialSourceOptions = sourceOptions;\r\n        this.retina = new Retina(this);\r\n        this.canvas = new Canvas(this, this._engine);\r\n        this.particles = new Particles(this._engine, this);\r\n        this.pathGenerators = new Map();\r\n        this.interactivity = {\r\n            mouse: {\r\n                clicking: false,\r\n                inside: false,\r\n            },\r\n        };\r\n        this.plugins = new Map();\r\n        this.effectDrawers = new Map();\r\n        this.shapeDrawers = new Map();\r\n        this._options = loadContainerOptions(this._engine, this);\r\n        this.actualOptions = loadContainerOptions(this._engine, this);\r\n        this._eventListeners = new EventListeners(this);\r\n        this._intersectionObserver = safeIntersectionObserver(entries => this._intersectionManager(entries));\r\n        this._engine.dispatchEvent(EventType.containerBuilt, { container: this });\r\n    }\r\n    get animationStatus() {\r\n        return !this._paused && !this.pageHidden && guardCheck(this);\r\n    }\r\n    get options() {\r\n        return this._options;\r\n    }\r\n    get sourceOptions() {\r\n        return this._sourceOptions;\r\n    }\r\n    addClickHandler(callback) {\r\n        if (!guardCheck(this)) {\r\n            return;\r\n        }\r\n        const el = this.interactivity.element;\r\n        if (!el) {\r\n            return;\r\n        }\r\n        const clickOrTouchHandler = (e, pos, radius) => {\r\n            if (!guardCheck(this)) {\r\n                return;\r\n            }\r\n            const pxRatio = this.retina.pixelRatio, posRetina = {\r\n                x: pos.x * pxRatio,\r\n                y: pos.y * pxRatio,\r\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\r\n            callback(e, particles);\r\n        }, clickHandler = (e) => {\r\n            if (!guardCheck(this)) {\r\n                return;\r\n            }\r\n            const mouseEvent = e, pos = {\r\n                x: mouseEvent.offsetX || mouseEvent.clientX,\r\n                y: mouseEvent.offsetY || mouseEvent.clientY,\r\n            };\r\n            clickOrTouchHandler(e, pos, clickRadius);\r\n        }, touchStartHandler = () => {\r\n            if (!guardCheck(this)) {\r\n                return;\r\n            }\r\n            touched = true;\r\n            touchMoved = false;\r\n        }, touchMoveHandler = () => {\r\n            if (!guardCheck(this)) {\r\n                return;\r\n            }\r\n            touchMoved = true;\r\n        }, touchEndHandler = (e) => {\r\n            if (!guardCheck(this)) {\r\n                return;\r\n            }\r\n            if (touched && !touchMoved) {\r\n                const touchEvent = e;\r\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - touchEndLengthOffset];\r\n                if (!lastTouch) {\r\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - touchEndLengthOffset];\r\n                    if (!lastTouch) {\r\n                        return;\r\n                    }\r\n                }\r\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\r\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\r\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate),\r\n                };\r\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\r\n            }\r\n            touched = false;\r\n            touchMoved = false;\r\n        }, touchCancelHandler = () => {\r\n            if (!guardCheck(this)) {\r\n                return;\r\n            }\r\n            touched = false;\r\n            touchMoved = false;\r\n        };\r\n        let touched = false, touchMoved = false;\r\n        this._clickHandlers.set(\"click\", clickHandler);\r\n        this._clickHandlers.set(\"touchstart\", touchStartHandler);\r\n        this._clickHandlers.set(\"touchmove\", touchMoveHandler);\r\n        this._clickHandlers.set(\"touchend\", touchEndHandler);\r\n        this._clickHandlers.set(\"touchcancel\", touchCancelHandler);\r\n        for (const [key, handler] of this._clickHandlers) {\r\n            el.addEventListener(key, handler);\r\n        }\r\n    }\r\n    addLifeTime(value) {\r\n        this._lifeTime += value;\r\n    }\r\n    addPath(key, generator, override = false) {\r\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\r\n            return false;\r\n        }\r\n        this.pathGenerators.set(key, generator);\r\n        return true;\r\n    }\r\n    alive() {\r\n        return !this._duration || this._lifeTime <= this._duration;\r\n    }\r\n    clearClickHandlers() {\r\n        if (!guardCheck(this)) {\r\n            return;\r\n        }\r\n        for (const [key, handler] of this._clickHandlers) {\r\n            this.interactivity.element?.removeEventListener(key, handler);\r\n        }\r\n        this._clickHandlers.clear();\r\n    }\r\n    destroy(remove = true) {\r\n        if (!guardCheck(this)) {\r\n            return;\r\n        }\r\n        this.stop();\r\n        this.clearClickHandlers();\r\n        this.particles.destroy();\r\n        this.canvas.destroy();\r\n        for (const effectDrawer of this.effectDrawers.values()) {\r\n            effectDrawer.destroy?.(this);\r\n        }\r\n        for (const shapeDrawer of this.shapeDrawers.values()) {\r\n            shapeDrawer.destroy?.(this);\r\n        }\r\n        for (const key of this.effectDrawers.keys()) {\r\n            this.effectDrawers.delete(key);\r\n        }\r\n        for (const key of this.shapeDrawers.keys()) {\r\n            this.shapeDrawers.delete(key);\r\n        }\r\n        this._engine.clearPlugins(this);\r\n        this.destroyed = true;\r\n        if (remove) {\r\n            const mainArr = this._engine.items, idx = mainArr.findIndex(t => t === this);\r\n            if (idx >= removeMinIndex) {\r\n                mainArr.splice(idx, removeDeleteCount);\r\n            }\r\n        }\r\n        this._engine.dispatchEvent(EventType.containerDestroyed, { container: this });\r\n    }\r\n    draw(force) {\r\n        if (!guardCheck(this)) {\r\n            return;\r\n        }\r\n        let refreshTime = force;\r\n        const frame = (timestamp) => {\r\n            if (refreshTime) {\r\n                this._lastFrameTime = undefined;\r\n                refreshTime = false;\r\n            }\r\n            this._nextFrame(timestamp);\r\n        };\r\n        this._drawAnimationFrame = animate(timestamp => frame(timestamp));\r\n    }\r\n    async export(type, options = {}) {\r\n        for (const plugin of this.plugins.values()) {\r\n            if (!plugin.export) {\r\n                continue;\r\n            }\r\n            const res = await plugin.export(type, options);\r\n            if (!res.supported) {\r\n                continue;\r\n            }\r\n            return res.blob;\r\n        }\r\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\r\n    }\r\n    handleClickMode(mode) {\r\n        if (!guardCheck(this)) {\r\n            return;\r\n        }\r\n        this.particles.handleClickMode(mode);\r\n        for (const plugin of this.plugins.values()) {\r\n            plugin.handleClickMode?.(mode);\r\n        }\r\n    }\r\n    async init() {\r\n        if (!guardCheck(this)) {\r\n            return;\r\n        }\r\n        const effects = this._engine.getSupportedEffects();\r\n        for (const type of effects) {\r\n            const drawer = this._engine.getEffectDrawer(type);\r\n            if (drawer) {\r\n                this.effectDrawers.set(type, drawer);\r\n            }\r\n        }\r\n        const shapes = this._engine.getSupportedShapes();\r\n        for (const type of shapes) {\r\n            const drawer = this._engine.getShapeDrawer(type);\r\n            if (drawer) {\r\n                this.shapeDrawers.set(type, drawer);\r\n            }\r\n        }\r\n        await this.particles.initPlugins();\r\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\r\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\r\n        const availablePlugins = await this._engine.getAvailablePlugins(this);\r\n        for (const [id, plugin] of availablePlugins) {\r\n            this.plugins.set(id, plugin);\r\n        }\r\n        this.retina.init();\r\n        await this.canvas.init();\r\n        this.updateActualOptions();\r\n        this.canvas.initBackground();\r\n        this.canvas.resize();\r\n        const { zLayers, duration, delay, fpsLimit, smooth } = this.actualOptions;\r\n        this.zLayers = zLayers;\r\n        this._duration = getRangeValue(duration) * millisecondsToSeconds;\r\n        this._delay = getRangeValue(delay) * millisecondsToSeconds;\r\n        this._lifeTime = 0;\r\n        this.fpsLimit = fpsLimit > minFpsLimit ? fpsLimit : defaultFpsLimit;\r\n        this._smooth = smooth;\r\n        for (const drawer of this.effectDrawers.values()) {\r\n            await drawer.init?.(this);\r\n        }\r\n        for (const drawer of this.shapeDrawers.values()) {\r\n            await drawer.init?.(this);\r\n        }\r\n        for (const plugin of this.plugins.values()) {\r\n            await plugin.init?.();\r\n        }\r\n        this._engine.dispatchEvent(EventType.containerInit, { container: this });\r\n        await this.particles.init();\r\n        this.particles.setDensity();\r\n        for (const plugin of this.plugins.values()) {\r\n            plugin.particlesSetup?.();\r\n        }\r\n        this._engine.dispatchEvent(EventType.particlesSetup, { container: this });\r\n    }\r\n    async loadTheme(name) {\r\n        if (!guardCheck(this)) {\r\n            return;\r\n        }\r\n        this._currentTheme = name;\r\n        await this.refresh();\r\n    }\r\n    pause() {\r\n        if (!guardCheck(this)) {\r\n            return;\r\n        }\r\n        if (this._drawAnimationFrame !== undefined) {\r\n            cancelAnimation(this._drawAnimationFrame);\r\n            delete this._drawAnimationFrame;\r\n        }\r\n        if (this._paused) {\r\n            return;\r\n        }\r\n        for (const plugin of this.plugins.values()) {\r\n            plugin.pause?.();\r\n        }\r\n        if (!this.pageHidden) {\r\n            this._paused = true;\r\n        }\r\n        this._engine.dispatchEvent(EventType.containerPaused, { container: this });\r\n    }\r\n    play(force) {\r\n        if (!guardCheck(this)) {\r\n            return;\r\n        }\r\n        const needsUpdate = this._paused || force;\r\n        if (this._firstStart && !this.actualOptions.autoPlay) {\r\n            this._firstStart = false;\r\n            return;\r\n        }\r\n        if (this._paused) {\r\n            this._paused = false;\r\n        }\r\n        if (needsUpdate) {\r\n            for (const plugin of this.plugins.values()) {\r\n                if (plugin.play) {\r\n                    plugin.play();\r\n                }\r\n            }\r\n        }\r\n        this._engine.dispatchEvent(EventType.containerPlay, { container: this });\r\n        this.draw(needsUpdate ?? false);\r\n    }\r\n    async refresh() {\r\n        if (!guardCheck(this)) {\r\n            return;\r\n        }\r\n        this.stop();\r\n        return this.start();\r\n    }\r\n    async reset(sourceOptions) {\r\n        if (!guardCheck(this)) {\r\n            return;\r\n        }\r\n        this._initialSourceOptions = sourceOptions;\r\n        this._sourceOptions = sourceOptions;\r\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\r\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\r\n        return this.refresh();\r\n    }\r\n    async start() {\r\n        if (!guardCheck(this) || this.started) {\r\n            return;\r\n        }\r\n        await this.init();\r\n        this.started = true;\r\n        await new Promise(resolve => {\r\n            const start = async () => {\r\n                this._eventListeners.addListeners();\r\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\r\n                    this._intersectionObserver.observe(this.interactivity.element);\r\n                }\r\n                for (const plugin of this.plugins.values()) {\r\n                    await plugin.start?.();\r\n                }\r\n                this._engine.dispatchEvent(EventType.containerStarted, { container: this });\r\n                this.play();\r\n                resolve();\r\n            };\r\n            this._delayTimeout = setTimeout(() => void start(), this._delay);\r\n        });\r\n    }\r\n    stop() {\r\n        if (!guardCheck(this) || !this.started) {\r\n            return;\r\n        }\r\n        if (this._delayTimeout) {\r\n            clearTimeout(this._delayTimeout);\r\n            delete this._delayTimeout;\r\n        }\r\n        this._firstStart = true;\r\n        this.started = false;\r\n        this._eventListeners.removeListeners();\r\n        this.pause();\r\n        this.particles.clear();\r\n        this.canvas.stop();\r\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\r\n            this._intersectionObserver.unobserve(this.interactivity.element);\r\n        }\r\n        for (const plugin of this.plugins.values()) {\r\n            plugin.stop?.();\r\n        }\r\n        for (const key of this.plugins.keys()) {\r\n            this.plugins.delete(key);\r\n        }\r\n        this._sourceOptions = this._options;\r\n        this._engine.dispatchEvent(EventType.containerStopped, { container: this });\r\n    }\r\n    updateActualOptions() {\r\n        this.actualOptions.responsive = [];\r\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\r\n        this.actualOptions.setTheme(this._currentTheme);\r\n        if (this._responsiveMaxWidth === newMaxWidth) {\r\n            return false;\r\n        }\r\n        this._responsiveMaxWidth = newMaxWidth;\r\n        return true;\r\n    }\r\n}\r\n", "import { deleteCount, minIndex } from \"../Core/Utils/Constants.js\";\r\nexport class EventDispatcher {\r\n    constructor() {\r\n        this._listeners = new Map();\r\n    }\r\n    addEventListener(type, listener) {\r\n        this.removeEventListener(type, listener);\r\n        let arr = this._listeners.get(type);\r\n        if (!arr) {\r\n            arr = [];\r\n            this._listeners.set(type, arr);\r\n        }\r\n        arr.push(listener);\r\n    }\r\n    dispatchEvent(type, args) {\r\n        const listeners = this._listeners.get(type);\r\n        listeners?.forEach(handler => handler(args));\r\n    }\r\n    hasEventListener(type) {\r\n        return !!this._listeners.get(type);\r\n    }\r\n    removeAllEventListeners(type) {\r\n        if (!type) {\r\n            this._listeners = new Map();\r\n        }\r\n        else {\r\n            this._listeners.delete(type);\r\n        }\r\n    }\r\n    removeEventListener(type, listener) {\r\n        const arr = this._listeners.get(type);\r\n        if (!arr) {\r\n            return;\r\n        }\r\n        const length = arr.length, idx = arr.indexOf(listener);\r\n        if (idx < minIndex) {\r\n            return;\r\n        }\r\n        if (length === deleteCount) {\r\n            this._listeners.delete(type);\r\n        }\r\n        else {\r\n            arr.splice(idx, deleteCount);\r\n        }\r\n    }\r\n}\r\n", "import { canvasFirstIndex, canvasTag, errorPrefix, generatedAttribute, generatedFalse, generatedTrue, loadMinIndex, loadRandomFactor, none, one, removeDeleteCount, } from \"./Utils/Constants.js\";\r\nimport { executeOnSingleOrMultiple, getLogger, itemFromSingleOrMultiple } from \"../Utils/Utils.js\";\r\nimport { Container } from \"./Container.js\";\r\nimport { EventDispatcher } from \"../Utils/EventDispatcher.js\";\r\nimport { EventType } from \"../Enums/Types/EventType.js\";\r\nimport { getRandom } from \"../Utils/NumberUtils.js\";\r\nasync function getItemsFromInitializer(container, map, initializers, force = false) {\r\n    let res = map.get(container);\r\n    if (!res || force) {\r\n        res = await Promise.all([...initializers.values()].map(t => t(container)));\r\n        map.set(container, res);\r\n    }\r\n    return res;\r\n}\r\nasync function getDataFromUrl(data) {\r\n    const url = itemFromSingleOrMultiple(data.url, data.index);\r\n    if (!url) {\r\n        return data.fallback;\r\n    }\r\n    const response = await fetch(url);\r\n    if (response.ok) {\r\n        return (await response.json());\r\n    }\r\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\r\n    return data.fallback;\r\n}\r\nconst getCanvasFromContainer = (domContainer) => {\r\n    let canvasEl;\r\n    if (domContainer instanceof HTMLCanvasElement || domContainer.tagName.toLowerCase() === canvasTag) {\r\n        canvasEl = domContainer;\r\n        if (!canvasEl.dataset[generatedAttribute]) {\r\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\r\n        }\r\n    }\r\n    else {\r\n        const existingCanvases = domContainer.getElementsByTagName(canvasTag);\r\n        if (existingCanvases.length) {\r\n            canvasEl = existingCanvases[canvasFirstIndex];\r\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\r\n        }\r\n        else {\r\n            canvasEl = document.createElement(canvasTag);\r\n            canvasEl.dataset[generatedAttribute] = generatedTrue;\r\n            domContainer.appendChild(canvasEl);\r\n        }\r\n    }\r\n    const fullPercent = \"100%\";\r\n    if (!canvasEl.style.width) {\r\n        canvasEl.style.width = fullPercent;\r\n    }\r\n    if (!canvasEl.style.height) {\r\n        canvasEl.style.height = fullPercent;\r\n    }\r\n    return canvasEl;\r\n}, getDomContainer = (id, source) => {\r\n    let domContainer = source ?? document.getElementById(id);\r\n    if (domContainer) {\r\n        return domContainer;\r\n    }\r\n    domContainer = document.createElement(\"div\");\r\n    domContainer.id = id;\r\n    domContainer.dataset[generatedAttribute] = generatedTrue;\r\n    document.body.append(domContainer);\r\n    return domContainer;\r\n};\r\nexport class Engine {\r\n    constructor() {\r\n        this._configs = new Map();\r\n        this._domArray = [];\r\n        this._eventDispatcher = new EventDispatcher();\r\n        this._initialized = false;\r\n        this.plugins = [];\r\n        this.colorManagers = new Map();\r\n        this.easingFunctions = new Map();\r\n        this._initializers = {\r\n            interactors: new Map(),\r\n            movers: new Map(),\r\n            updaters: new Map(),\r\n        };\r\n        this.interactors = new Map();\r\n        this.movers = new Map();\r\n        this.updaters = new Map();\r\n        this.presets = new Map();\r\n        this.effectDrawers = new Map();\r\n        this.shapeDrawers = new Map();\r\n        this.pathGenerators = new Map();\r\n    }\r\n    get configs() {\r\n        const res = {};\r\n        for (const [name, config] of this._configs) {\r\n            res[name] = config;\r\n        }\r\n        return res;\r\n    }\r\n    get items() {\r\n        return this._domArray;\r\n    }\r\n    get version() {\r\n        return \"3.8.1\";\r\n    }\r\n    async addColorManager(manager, refresh = true) {\r\n        this.colorManagers.set(manager.key, manager);\r\n        await this.refresh(refresh);\r\n    }\r\n    addConfig(config) {\r\n        const key = config.key ?? config.name ?? \"default\";\r\n        this._configs.set(key, config);\r\n        this._eventDispatcher.dispatchEvent(EventType.configAdded, { data: { name: key, config } });\r\n    }\r\n    async addEasing(name, easing, refresh = true) {\r\n        if (this.getEasing(name)) {\r\n            return;\r\n        }\r\n        this.easingFunctions.set(name, easing);\r\n        await this.refresh(refresh);\r\n    }\r\n    async addEffect(effect, drawer, refresh = true) {\r\n        executeOnSingleOrMultiple(effect, type => {\r\n            if (!this.getEffectDrawer(type)) {\r\n                this.effectDrawers.set(type, drawer);\r\n            }\r\n        });\r\n        await this.refresh(refresh);\r\n    }\r\n    addEventListener(type, listener) {\r\n        this._eventDispatcher.addEventListener(type, listener);\r\n    }\r\n    async addInteractor(name, interactorInitializer, refresh = true) {\r\n        this._initializers.interactors.set(name, interactorInitializer);\r\n        await this.refresh(refresh);\r\n    }\r\n    async addMover(name, moverInitializer, refresh = true) {\r\n        this._initializers.movers.set(name, moverInitializer);\r\n        await this.refresh(refresh);\r\n    }\r\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\r\n        this._initializers.updaters.set(name, updaterInitializer);\r\n        await this.refresh(refresh);\r\n    }\r\n    async addPathGenerator(name, generator, refresh = true) {\r\n        if (!this.getPathGenerator(name)) {\r\n            this.pathGenerators.set(name, generator);\r\n        }\r\n        await this.refresh(refresh);\r\n    }\r\n    async addPlugin(plugin, refresh = true) {\r\n        if (!this.getPlugin(plugin.id)) {\r\n            this.plugins.push(plugin);\r\n        }\r\n        await this.refresh(refresh);\r\n    }\r\n    async addPreset(preset, options, override = false, refresh = true) {\r\n        if (override || !this.getPreset(preset)) {\r\n            this.presets.set(preset, options);\r\n        }\r\n        await this.refresh(refresh);\r\n    }\r\n    async addShape(drawer, refresh = true) {\r\n        for (const validType of drawer.validTypes) {\r\n            if (this.getShapeDrawer(validType)) {\r\n                continue;\r\n            }\r\n            this.shapeDrawers.set(validType, drawer);\r\n        }\r\n        await this.refresh(refresh);\r\n    }\r\n    checkVersion(pluginVersion) {\r\n        if (this.version === pluginVersion) {\r\n            return;\r\n        }\r\n        throw new Error(`The tsParticles version is different from the loaded plugins version. Engine version: ${this.version}. Plugin version: ${pluginVersion}`);\r\n    }\r\n    clearPlugins(container) {\r\n        this.updaters.delete(container);\r\n        this.movers.delete(container);\r\n        this.interactors.delete(container);\r\n    }\r\n    dispatchEvent(type, args) {\r\n        this._eventDispatcher.dispatchEvent(type, args);\r\n    }\r\n    dom() {\r\n        return this.items;\r\n    }\r\n    domItem(index) {\r\n        return this.item(index);\r\n    }\r\n    async getAvailablePlugins(container) {\r\n        const res = new Map();\r\n        for (const plugin of this.plugins) {\r\n            if (plugin.needsPlugin(container.actualOptions)) {\r\n                res.set(plugin.id, await plugin.getPlugin(container));\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    getEasing(name) {\r\n        return this.easingFunctions.get(name) ?? ((value) => value);\r\n    }\r\n    getEffectDrawer(type) {\r\n        return this.effectDrawers.get(type);\r\n    }\r\n    async getInteractors(container, force = false) {\r\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\r\n    }\r\n    async getMovers(container, force = false) {\r\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\r\n    }\r\n    getPathGenerator(type) {\r\n        return this.pathGenerators.get(type);\r\n    }\r\n    getPlugin(plugin) {\r\n        return this.plugins.find(t => t.id === plugin);\r\n    }\r\n    getPreset(preset) {\r\n        return this.presets.get(preset);\r\n    }\r\n    getShapeDrawer(type) {\r\n        return this.shapeDrawers.get(type);\r\n    }\r\n    getSupportedEffects() {\r\n        return this.effectDrawers.keys();\r\n    }\r\n    getSupportedShapes() {\r\n        return this.shapeDrawers.keys();\r\n    }\r\n    async getUpdaters(container, force = false) {\r\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\r\n    }\r\n    init() {\r\n        if (this._initialized) {\r\n            return;\r\n        }\r\n        this._initialized = true;\r\n    }\r\n    item(index) {\r\n        const { items } = this, item = items[index];\r\n        if (!item || item.destroyed) {\r\n            items.splice(index, removeDeleteCount);\r\n            return;\r\n        }\r\n        return item;\r\n    }\r\n    async load(params) {\r\n        const id = params.id ?? params.element?.id ?? `tsparticles${Math.floor(getRandom() * loadRandomFactor)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\r\n        const currentOptions = itemFromSingleOrMultiple(options, index), { items } = this, oldIndex = items.findIndex(v => v.id.description === id), newItem = new Container(this, id, currentOptions);\r\n        if (oldIndex >= loadMinIndex) {\r\n            const old = this.item(oldIndex), deleteCount = old ? one : none;\r\n            if (old && !old.destroyed) {\r\n                old.destroy(false);\r\n            }\r\n            items.splice(oldIndex, deleteCount, newItem);\r\n        }\r\n        else {\r\n            items.push(newItem);\r\n        }\r\n        const domContainer = getDomContainer(id, params.element), canvasEl = getCanvasFromContainer(domContainer);\r\n        newItem.canvas.loadCanvas(canvasEl);\r\n        await newItem.start();\r\n        return newItem;\r\n    }\r\n    loadOptions(options, sourceOptions) {\r\n        this.plugins.forEach(plugin => plugin.loadOptions?.(options, sourceOptions));\r\n    }\r\n    loadParticlesOptions(container, options, ...sourceOptions) {\r\n        const updaters = this.updaters.get(container);\r\n        if (!updaters) {\r\n            return;\r\n        }\r\n        updaters.forEach(updater => updater.loadOptions?.(options, ...sourceOptions));\r\n    }\r\n    async refresh(refresh = true) {\r\n        if (!refresh) {\r\n            return;\r\n        }\r\n        await Promise.all(this.items.map(t => t.refresh()));\r\n    }\r\n    removeEventListener(type, listener) {\r\n        this._eventDispatcher.removeEventListener(type, listener);\r\n    }\r\n    setOnClickHandler(callback) {\r\n        const { items } = this;\r\n        if (!items.length) {\r\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\r\n        }\r\n        items.forEach(item => item.addClickHandler(callback));\r\n    }\r\n}\r\n", "import { Engine } from \"./Core/Engine.js\";\r\nexport function init() {\r\n    const engine = new Engine();\r\n    engine.init();\r\n    return engine;\r\n}\r\n", "import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\r\nexport class ExternalInteractorBase {\r\n    constructor(container) {\r\n        this.type = InteractorType.external;\r\n        this.container = container;\r\n    }\r\n}\r\n", "import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\r\nexport class ParticlesInteractorBase {\r\n    constructor(container) {\r\n        this.type = InteractorType.particles;\r\n        this.container = container;\r\n    }\r\n}\r\n", "export var RotateDirection;\r\n(function (RotateDirection) {\r\n    RotateDirection[\"clockwise\"] = \"clockwise\";\r\n    RotateDirection[\"counterClockwise\"] = \"counter-clockwise\";\r\n    RotateDirection[\"random\"] = \"random\";\r\n})(RotateDirection || (RotateDirection = {}));\r\n", "export var GradientType;\r\n(function (GradientType) {\r\n    GradientType[\"linear\"] = \"linear\";\r\n    GradientType[\"radial\"] = \"radial\";\r\n    GradientType[\"random\"] = \"random\";\r\n})(GradientType || (GradientType = {}));\r\n", "export var EasingType;\r\n(function (EasingType) {\r\n    EasingType[\"easeInBack\"] = \"ease-in-back\";\r\n    EasingType[\"easeInCirc\"] = \"ease-in-circ\";\r\n    EasingType[\"easeInCubic\"] = \"ease-in-cubic\";\r\n    EasingType[\"easeInLinear\"] = \"ease-in-linear\";\r\n    EasingType[\"easeInQuad\"] = \"ease-in-quad\";\r\n    EasingType[\"easeInQuart\"] = \"ease-in-quart\";\r\n    EasingType[\"easeInQuint\"] = \"ease-in-quint\";\r\n    EasingType[\"easeInExpo\"] = \"ease-in-expo\";\r\n    EasingType[\"easeInSine\"] = \"ease-in-sine\";\r\n    EasingType[\"easeOutBack\"] = \"ease-out-back\";\r\n    EasingType[\"easeOutCirc\"] = \"ease-out-circ\";\r\n    EasingType[\"easeOutCubic\"] = \"ease-out-cubic\";\r\n    EasingType[\"easeOutLinear\"] = \"ease-out-linear\";\r\n    EasingType[\"easeOutQuad\"] = \"ease-out-quad\";\r\n    EasingType[\"easeOutQuart\"] = \"ease-out-quart\";\r\n    EasingType[\"easeOutQuint\"] = \"ease-out-quint\";\r\n    EasingType[\"easeOutExpo\"] = \"ease-out-expo\";\r\n    EasingType[\"easeOutSine\"] = \"ease-out-sine\";\r\n    EasingType[\"easeInOutBack\"] = \"ease-in-out-back\";\r\n    EasingType[\"easeInOutCirc\"] = \"ease-in-out-circ\";\r\n    EasingType[\"easeInOutCubic\"] = \"ease-in-out-cubic\";\r\n    EasingType[\"easeInOutLinear\"] = \"ease-in-out-linear\";\r\n    EasingType[\"easeInOutQuad\"] = \"ease-in-out-quad\";\r\n    EasingType[\"easeInOutQuart\"] = \"ease-in-out-quart\";\r\n    EasingType[\"easeInOutQuint\"] = \"ease-in-out-quint\";\r\n    EasingType[\"easeInOutExpo\"] = \"ease-in-out-expo\";\r\n    EasingType[\"easeInOutSine\"] = \"ease-in-out-sine\";\r\n})(EasingType || (EasingType = {}));\r\n", "import { init } from \"./init.js\";\r\nimport { isSsr } from \"./Utils/Utils.js\";\r\nconst tsParticles = init();\r\nif (!isSsr()) {\r\n    window.tsParticles = tsParticles;\r\n}\r\nexport * from \"./exports.js\";\r\nexport * from \"./export-types.js\";\r\nexport { tsParticles };\r\n"],
  "mappings": "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",
  "names": ["MoveDirection", "squareExp", "AnimationMode", "AnimationStatus", "DestroyType", "OutModeDirection", "PixelMode", "StartValueType", "divMode", "decayOffset", "identity", "minVelocity", "AlterType", "temp1", "temp2", "identity", "minVelocity", "InteractivityDetect", "container", "theme", "EventType", "DivType", "ResponsiveMode", "ThemeMode", "CollisionMode", "OutMode", "LimitMode", "InteractorType", "ParticleOutType", "container", "RangeType", "capacity", "manualCount", "container", "deleteCount", "RotateDirection", "GradientType", "EasingType"]
}
